// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maintain.proto

package FacedataProcessServer;

public final class Maintainpb {
  private Maintainpb() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code maintainpb.MessageType}
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MsgDevServerStatus = 40961;</code>
     *
     * <pre>
     *服务器设备状态
     * </pre>
     */
    MsgDevServerStatus(0, 40961),
    ;

    /**
     * <code>MsgDevServerStatus = 40961;</code>
     *
     * <pre>
     *服务器设备状态
     * </pre>
     */
    public static final int MsgDevServerStatus_VALUE = 40961;


    public final int getNumber() { return value; }

    public static MessageType valueOf(int value) {
      switch (value) {
        case 40961: return MsgDevServerStatus;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maintainpb.MessageType)
  }

  public interface ProcessStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.ProcessStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    java.lang.String getVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>required int64 start_time = 3;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int64 start_time = 3;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    long getStartTime();

    /**
     * <code>required int64 runtime = 4;</code>
     *
     * <pre>
     * 运行时长（单位：秒）
     * </pre>
     */
    boolean hasRuntime();
    /**
     * <code>required int64 runtime = 4;</code>
     *
     * <pre>
     * 运行时长（单位：秒）
     * </pre>
     */
    long getRuntime();

    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     * 状态 0:离线；1在线
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     * 状态 0:离线；1在线
     * </pre>
     */
    int getStatus();
  }
  /**
   * Protobuf type {@code maintainpb.ProcessStatus}
   *
   * <pre>
   * 进程状态
   * </pre>
   */
  public static final class ProcessStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.ProcessStatus)
      ProcessStatusOrBuilder {
    // Use ProcessStatus.newBuilder() to construct.
    private ProcessStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProcessStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProcessStatus defaultInstance;
    public static ProcessStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ProcessStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProcessStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              version_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              startTime_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              runtime_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              status_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ProcessStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ProcessStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.ProcessStatus.class, FacedataProcessServer.Maintainpb.ProcessStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ProcessStatus> PARSER =
        new com.google.protobuf.AbstractParser<ProcessStatus>() {
      public ProcessStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProcessStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private java.lang.Object version_;
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_TIME_FIELD_NUMBER = 3;
    private long startTime_;
    /**
     * <code>required int64 start_time = 3;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 start_time = 3;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int RUNTIME_FIELD_NUMBER = 4;
    private long runtime_;
    /**
     * <code>required int64 runtime = 4;</code>
     *
     * <pre>
     * 运行时长（单位：秒）
     * </pre>
     */
    public boolean hasRuntime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 runtime = 4;</code>
     *
     * <pre>
     * 运行时长（单位：秒）
     * </pre>
     */
    public long getRuntime() {
      return runtime_;
    }

    public static final int STATUS_FIELD_NUMBER = 5;
    private int status_;
    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     * 状态 0:离线；1在线
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 status = 5;</code>
     *
     * <pre>
     * 状态 0:离线；1在线
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    private void initFields() {
      name_ = "";
      version_ = "";
      startTime_ = 0L;
      runtime_ = 0L;
      status_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRuntime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, runtime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, status_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, startTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, runtime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.ProcessStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.ProcessStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.ProcessStatus}
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.ProcessStatus)
        FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ProcessStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ProcessStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.ProcessStatus.class, FacedataProcessServer.Maintainpb.ProcessStatus.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.ProcessStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        runtime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ProcessStatus_descriptor;
      }

      public FacedataProcessServer.Maintainpb.ProcessStatus getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.ProcessStatus.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.ProcessStatus build() {
        FacedataProcessServer.Maintainpb.ProcessStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.ProcessStatus buildPartial() {
        FacedataProcessServer.Maintainpb.ProcessStatus result = new FacedataProcessServer.Maintainpb.ProcessStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.runtime_ = runtime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.ProcessStatus) {
          return mergeFrom((FacedataProcessServer.Maintainpb.ProcessStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.ProcessStatus other) {
        if (other == FacedataProcessServer.Maintainpb.ProcessStatus.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasVersion()) {
          bitField0_ |= 0x00000002;
          version_ = other.version_;
          onChanged();
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasRuntime()) {
          setRuntime(other.getRuntime());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasRuntime()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.ProcessStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.ProcessStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <code>required int64 start_time = 3;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 start_time = 3;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int64 start_time = 3;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000004;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 start_time = 3;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long runtime_ ;
      /**
       * <code>required int64 runtime = 4;</code>
       *
       * <pre>
       * 运行时长（单位：秒）
       * </pre>
       */
      public boolean hasRuntime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 runtime = 4;</code>
       *
       * <pre>
       * 运行时长（单位：秒）
       * </pre>
       */
      public long getRuntime() {
        return runtime_;
      }
      /**
       * <code>required int64 runtime = 4;</code>
       *
       * <pre>
       * 运行时长（单位：秒）
       * </pre>
       */
      public Builder setRuntime(long value) {
        bitField0_ |= 0x00000008;
        runtime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 runtime = 4;</code>
       *
       * <pre>
       * 运行时长（单位：秒）
       * </pre>
       */
      public Builder clearRuntime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        runtime_ = 0L;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       * 状态 0:离线；1在线
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       * 状态 0:离线；1在线
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       * 状态 0:离线；1在线
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000010;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 5;</code>
       *
       * <pre>
       * 状态 0:离线；1在线
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.ProcessStatus)
    }

    static {
      defaultInstance = new ProcessStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.ProcessStatus)
  }

  public interface FdfsStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.FdfsStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string group = 1;</code>
     *
     * <pre>
     * 组名
     * </pre>
     */
    boolean hasGroup();
    /**
     * <code>required string group = 1;</code>
     *
     * <pre>
     * 组名
     * </pre>
     */
    java.lang.String getGroup();
    /**
     * <code>required string group = 1;</code>
     *
     * <pre>
     * 组名
     * </pre>
     */
    com.google.protobuf.ByteString
        getGroupBytes();

    /**
     * <code>required int32 total = 2;</code>
     *
     * <pre>
     * 总硬盘空间(单位：MB)
     * </pre>
     */
    boolean hasTotal();
    /**
     * <code>required int32 total = 2;</code>
     *
     * <pre>
     * 总硬盘空间(单位：MB)
     * </pre>
     */
    int getTotal();

    /**
     * <code>required int32 free = 3;</code>
     *
     * <pre>
     * 硬盘空闲空间(单位：MB)
     * </pre>
     */
    boolean hasFree();
    /**
     * <code>required int32 free = 3;</code>
     *
     * <pre>
     * 硬盘空闲空间(单位：MB)
     * </pre>
     */
    int getFree();

    /**
     * <code>required int32 trunk_free = 4;</code>
     *
     * <pre>
     * trunk空闲空间(单位：MB)
     * </pre>
     */
    boolean hasTrunkFree();
    /**
     * <code>required int32 trunk_free = 4;</code>
     *
     * <pre>
     * trunk空闲空间(单位：MB)
     * </pre>
     */
    int getTrunkFree();
  }
  /**
   * Protobuf type {@code maintainpb.FdfsStatus}
   *
   * <pre>
   * FDFS状态
   * </pre>
   */
  public static final class FdfsStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.FdfsStatus)
      FdfsStatusOrBuilder {
    // Use FdfsStatus.newBuilder() to construct.
    private FdfsStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FdfsStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FdfsStatus defaultInstance;
    public static FdfsStatus getDefaultInstance() {
      return defaultInstance;
    }

    public FdfsStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FdfsStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              group_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              total_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              free_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              trunkFree_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_FdfsStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_FdfsStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.FdfsStatus.class, FacedataProcessServer.Maintainpb.FdfsStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<FdfsStatus> PARSER =
        new com.google.protobuf.AbstractParser<FdfsStatus>() {
      public FdfsStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FdfsStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FdfsStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int GROUP_FIELD_NUMBER = 1;
    private java.lang.Object group_;
    /**
     * <code>required string group = 1;</code>
     *
     * <pre>
     * 组名
     * </pre>
     */
    public boolean hasGroup() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string group = 1;</code>
     *
     * <pre>
     * 组名
     * </pre>
     */
    public java.lang.String getGroup() {
      java.lang.Object ref = group_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          group_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string group = 1;</code>
     *
     * <pre>
     * 组名
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGroupBytes() {
      java.lang.Object ref = group_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        group_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOTAL_FIELD_NUMBER = 2;
    private int total_;
    /**
     * <code>required int32 total = 2;</code>
     *
     * <pre>
     * 总硬盘空间(单位：MB)
     * </pre>
     */
    public boolean hasTotal() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 total = 2;</code>
     *
     * <pre>
     * 总硬盘空间(单位：MB)
     * </pre>
     */
    public int getTotal() {
      return total_;
    }

    public static final int FREE_FIELD_NUMBER = 3;
    private int free_;
    /**
     * <code>required int32 free = 3;</code>
     *
     * <pre>
     * 硬盘空闲空间(单位：MB)
     * </pre>
     */
    public boolean hasFree() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 free = 3;</code>
     *
     * <pre>
     * 硬盘空闲空间(单位：MB)
     * </pre>
     */
    public int getFree() {
      return free_;
    }

    public static final int TRUNK_FREE_FIELD_NUMBER = 4;
    private int trunkFree_;
    /**
     * <code>required int32 trunk_free = 4;</code>
     *
     * <pre>
     * trunk空闲空间(单位：MB)
     * </pre>
     */
    public boolean hasTrunkFree() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 trunk_free = 4;</code>
     *
     * <pre>
     * trunk空闲空间(单位：MB)
     * </pre>
     */
    public int getTrunkFree() {
      return trunkFree_;
    }

    private void initFields() {
      group_ = "";
      total_ = 0;
      free_ = 0;
      trunkFree_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasGroup()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFree()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTrunkFree()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getGroupBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, total_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, free_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, trunkFree_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getGroupBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, total_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, free_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, trunkFree_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.FdfsStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.FdfsStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.FdfsStatus}
     *
     * <pre>
     * FDFS状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.FdfsStatus)
        FacedataProcessServer.Maintainpb.FdfsStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_FdfsStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_FdfsStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.FdfsStatus.class, FacedataProcessServer.Maintainpb.FdfsStatus.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.FdfsStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        group_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        total_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        free_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        trunkFree_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_FdfsStatus_descriptor;
      }

      public FacedataProcessServer.Maintainpb.FdfsStatus getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.FdfsStatus.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.FdfsStatus build() {
        FacedataProcessServer.Maintainpb.FdfsStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.FdfsStatus buildPartial() {
        FacedataProcessServer.Maintainpb.FdfsStatus result = new FacedataProcessServer.Maintainpb.FdfsStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.group_ = group_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.total_ = total_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.free_ = free_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.trunkFree_ = trunkFree_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.FdfsStatus) {
          return mergeFrom((FacedataProcessServer.Maintainpb.FdfsStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.FdfsStatus other) {
        if (other == FacedataProcessServer.Maintainpb.FdfsStatus.getDefaultInstance()) return this;
        if (other.hasGroup()) {
          bitField0_ |= 0x00000001;
          group_ = other.group_;
          onChanged();
        }
        if (other.hasTotal()) {
          setTotal(other.getTotal());
        }
        if (other.hasFree()) {
          setFree(other.getFree());
        }
        if (other.hasTrunkFree()) {
          setTrunkFree(other.getTrunkFree());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasGroup()) {
          
          return false;
        }
        if (!hasTotal()) {
          
          return false;
        }
        if (!hasFree()) {
          
          return false;
        }
        if (!hasTrunkFree()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.FdfsStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.FdfsStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object group_ = "";
      /**
       * <code>required string group = 1;</code>
       *
       * <pre>
       * 组名
       * </pre>
       */
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string group = 1;</code>
       *
       * <pre>
       * 组名
       * </pre>
       */
      public java.lang.String getGroup() {
        java.lang.Object ref = group_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            group_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string group = 1;</code>
       *
       * <pre>
       * 组名
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGroupBytes() {
        java.lang.Object ref = group_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          group_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string group = 1;</code>
       *
       * <pre>
       * 组名
       * </pre>
       */
      public Builder setGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        group_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string group = 1;</code>
       *
       * <pre>
       * 组名
       * </pre>
       */
      public Builder clearGroup() {
        bitField0_ = (bitField0_ & ~0x00000001);
        group_ = getDefaultInstance().getGroup();
        onChanged();
        return this;
      }
      /**
       * <code>required string group = 1;</code>
       *
       * <pre>
       * 组名
       * </pre>
       */
      public Builder setGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        group_ = value;
        onChanged();
        return this;
      }

      private int total_ ;
      /**
       * <code>required int32 total = 2;</code>
       *
       * <pre>
       * 总硬盘空间(单位：MB)
       * </pre>
       */
      public boolean hasTotal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 total = 2;</code>
       *
       * <pre>
       * 总硬盘空间(单位：MB)
       * </pre>
       */
      public int getTotal() {
        return total_;
      }
      /**
       * <code>required int32 total = 2;</code>
       *
       * <pre>
       * 总硬盘空间(单位：MB)
       * </pre>
       */
      public Builder setTotal(int value) {
        bitField0_ |= 0x00000002;
        total_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 total = 2;</code>
       *
       * <pre>
       * 总硬盘空间(单位：MB)
       * </pre>
       */
      public Builder clearTotal() {
        bitField0_ = (bitField0_ & ~0x00000002);
        total_ = 0;
        onChanged();
        return this;
      }

      private int free_ ;
      /**
       * <code>required int32 free = 3;</code>
       *
       * <pre>
       * 硬盘空闲空间(单位：MB)
       * </pre>
       */
      public boolean hasFree() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 free = 3;</code>
       *
       * <pre>
       * 硬盘空闲空间(单位：MB)
       * </pre>
       */
      public int getFree() {
        return free_;
      }
      /**
       * <code>required int32 free = 3;</code>
       *
       * <pre>
       * 硬盘空闲空间(单位：MB)
       * </pre>
       */
      public Builder setFree(int value) {
        bitField0_ |= 0x00000004;
        free_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 free = 3;</code>
       *
       * <pre>
       * 硬盘空闲空间(单位：MB)
       * </pre>
       */
      public Builder clearFree() {
        bitField0_ = (bitField0_ & ~0x00000004);
        free_ = 0;
        onChanged();
        return this;
      }

      private int trunkFree_ ;
      /**
       * <code>required int32 trunk_free = 4;</code>
       *
       * <pre>
       * trunk空闲空间(单位：MB)
       * </pre>
       */
      public boolean hasTrunkFree() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 trunk_free = 4;</code>
       *
       * <pre>
       * trunk空闲空间(单位：MB)
       * </pre>
       */
      public int getTrunkFree() {
        return trunkFree_;
      }
      /**
       * <code>required int32 trunk_free = 4;</code>
       *
       * <pre>
       * trunk空闲空间(单位：MB)
       * </pre>
       */
      public Builder setTrunkFree(int value) {
        bitField0_ |= 0x00000008;
        trunkFree_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 trunk_free = 4;</code>
       *
       * <pre>
       * trunk空闲空间(单位：MB)
       * </pre>
       */
      public Builder clearTrunkFree() {
        bitField0_ = (bitField0_ & ~0x00000008);
        trunkFree_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.FdfsStatus)
    }

    static {
      defaultInstance = new FdfsStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.FdfsStatus)
  }

  public interface MySqlStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.MySqlStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 connection = 1;</code>
     *
     * <pre>
     * 连接数
     * </pre>
     */
    boolean hasConnection();
    /**
     * <code>required int32 connection = 1;</code>
     *
     * <pre>
     * 连接数
     * </pre>
     */
    int getConnection();

    /**
     * <code>required float traffic = 2;</code>
     *
     * <pre>
     * 传输流量(单位：KB)
     * </pre>
     */
    boolean hasTraffic();
    /**
     * <code>required float traffic = 2;</code>
     *
     * <pre>
     * 传输流量(单位：KB)
     * </pre>
     */
    float getTraffic();

    /**
     * <code>required int32 select = 3;</code>
     *
     * <pre>
     * 每秒数据库操作语句数
     * </pre>
     */
    boolean hasSelect();
    /**
     * <code>required int32 select = 3;</code>
     *
     * <pre>
     * 每秒数据库操作语句数
     * </pre>
     */
    int getSelect();

    /**
     * <code>required float usage = 4;</code>
     *
     * <pre>
     * 缓存区buffer利用率
     * </pre>
     */
    boolean hasUsage();
    /**
     * <code>required float usage = 4;</code>
     *
     * <pre>
     * 缓存区buffer利用率
     * </pre>
     */
    float getUsage();

    /**
     * <code>required int32 reads = 5;</code>
     *
     * <pre>
     * 每秒数据库读取数量
     * </pre>
     */
    boolean hasReads();
    /**
     * <code>required int32 reads = 5;</code>
     *
     * <pre>
     * 每秒数据库读取数量
     * </pre>
     */
    int getReads();

    /**
     * <code>required int32 writes = 6;</code>
     *
     * <pre>
     * 每秒数据库写入数量
     * </pre>
     */
    boolean hasWrites();
    /**
     * <code>required int32 writes = 6;</code>
     *
     * <pre>
     * 每秒数据库写入数量
     * </pre>
     */
    int getWrites();
  }
  /**
   * Protobuf type {@code maintainpb.MySqlStatus}
   *
   * <pre>
   * MYSQL状态
   * </pre>
   */
  public static final class MySqlStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.MySqlStatus)
      MySqlStatusOrBuilder {
    // Use MySqlStatus.newBuilder() to construct.
    private MySqlStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MySqlStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MySqlStatus defaultInstance;
    public static MySqlStatus getDefaultInstance() {
      return defaultInstance;
    }

    public MySqlStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MySqlStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              connection_ = input.readInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              traffic_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              select_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              usage_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              reads_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              writes_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_MySqlStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_MySqlStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.MySqlStatus.class, FacedataProcessServer.Maintainpb.MySqlStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<MySqlStatus> PARSER =
        new com.google.protobuf.AbstractParser<MySqlStatus>() {
      public MySqlStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MySqlStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MySqlStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CONNECTION_FIELD_NUMBER = 1;
    private int connection_;
    /**
     * <code>required int32 connection = 1;</code>
     *
     * <pre>
     * 连接数
     * </pre>
     */
    public boolean hasConnection() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 connection = 1;</code>
     *
     * <pre>
     * 连接数
     * </pre>
     */
    public int getConnection() {
      return connection_;
    }

    public static final int TRAFFIC_FIELD_NUMBER = 2;
    private float traffic_;
    /**
     * <code>required float traffic = 2;</code>
     *
     * <pre>
     * 传输流量(单位：KB)
     * </pre>
     */
    public boolean hasTraffic() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float traffic = 2;</code>
     *
     * <pre>
     * 传输流量(单位：KB)
     * </pre>
     */
    public float getTraffic() {
      return traffic_;
    }

    public static final int SELECT_FIELD_NUMBER = 3;
    private int select_;
    /**
     * <code>required int32 select = 3;</code>
     *
     * <pre>
     * 每秒数据库操作语句数
     * </pre>
     */
    public boolean hasSelect() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 select = 3;</code>
     *
     * <pre>
     * 每秒数据库操作语句数
     * </pre>
     */
    public int getSelect() {
      return select_;
    }

    public static final int USAGE_FIELD_NUMBER = 4;
    private float usage_;
    /**
     * <code>required float usage = 4;</code>
     *
     * <pre>
     * 缓存区buffer利用率
     * </pre>
     */
    public boolean hasUsage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float usage = 4;</code>
     *
     * <pre>
     * 缓存区buffer利用率
     * </pre>
     */
    public float getUsage() {
      return usage_;
    }

    public static final int READS_FIELD_NUMBER = 5;
    private int reads_;
    /**
     * <code>required int32 reads = 5;</code>
     *
     * <pre>
     * 每秒数据库读取数量
     * </pre>
     */
    public boolean hasReads() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 reads = 5;</code>
     *
     * <pre>
     * 每秒数据库读取数量
     * </pre>
     */
    public int getReads() {
      return reads_;
    }

    public static final int WRITES_FIELD_NUMBER = 6;
    private int writes_;
    /**
     * <code>required int32 writes = 6;</code>
     *
     * <pre>
     * 每秒数据库写入数量
     * </pre>
     */
    public boolean hasWrites() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 writes = 6;</code>
     *
     * <pre>
     * 每秒数据库写入数量
     * </pre>
     */
    public int getWrites() {
      return writes_;
    }

    private void initFields() {
      connection_ = 0;
      traffic_ = 0F;
      select_ = 0;
      usage_ = 0F;
      reads_ = 0;
      writes_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasConnection()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTraffic()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSelect()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUsage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReads()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWrites()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, connection_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, traffic_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, select_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, usage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, reads_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, writes_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, connection_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, traffic_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, select_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, usage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, reads_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, writes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.MySqlStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.MySqlStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.MySqlStatus}
     *
     * <pre>
     * MYSQL状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.MySqlStatus)
        FacedataProcessServer.Maintainpb.MySqlStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_MySqlStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_MySqlStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.MySqlStatus.class, FacedataProcessServer.Maintainpb.MySqlStatus.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.MySqlStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        connection_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        traffic_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        select_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        usage_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        reads_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        writes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_MySqlStatus_descriptor;
      }

      public FacedataProcessServer.Maintainpb.MySqlStatus getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.MySqlStatus.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.MySqlStatus build() {
        FacedataProcessServer.Maintainpb.MySqlStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.MySqlStatus buildPartial() {
        FacedataProcessServer.Maintainpb.MySqlStatus result = new FacedataProcessServer.Maintainpb.MySqlStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.connection_ = connection_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.traffic_ = traffic_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.select_ = select_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.usage_ = usage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reads_ = reads_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.writes_ = writes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.MySqlStatus) {
          return mergeFrom((FacedataProcessServer.Maintainpb.MySqlStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.MySqlStatus other) {
        if (other == FacedataProcessServer.Maintainpb.MySqlStatus.getDefaultInstance()) return this;
        if (other.hasConnection()) {
          setConnection(other.getConnection());
        }
        if (other.hasTraffic()) {
          setTraffic(other.getTraffic());
        }
        if (other.hasSelect()) {
          setSelect(other.getSelect());
        }
        if (other.hasUsage()) {
          setUsage(other.getUsage());
        }
        if (other.hasReads()) {
          setReads(other.getReads());
        }
        if (other.hasWrites()) {
          setWrites(other.getWrites());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasConnection()) {
          
          return false;
        }
        if (!hasTraffic()) {
          
          return false;
        }
        if (!hasSelect()) {
          
          return false;
        }
        if (!hasUsage()) {
          
          return false;
        }
        if (!hasReads()) {
          
          return false;
        }
        if (!hasWrites()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.MySqlStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.MySqlStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int connection_ ;
      /**
       * <code>required int32 connection = 1;</code>
       *
       * <pre>
       * 连接数
       * </pre>
       */
      public boolean hasConnection() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 connection = 1;</code>
       *
       * <pre>
       * 连接数
       * </pre>
       */
      public int getConnection() {
        return connection_;
      }
      /**
       * <code>required int32 connection = 1;</code>
       *
       * <pre>
       * 连接数
       * </pre>
       */
      public Builder setConnection(int value) {
        bitField0_ |= 0x00000001;
        connection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 connection = 1;</code>
       *
       * <pre>
       * 连接数
       * </pre>
       */
      public Builder clearConnection() {
        bitField0_ = (bitField0_ & ~0x00000001);
        connection_ = 0;
        onChanged();
        return this;
      }

      private float traffic_ ;
      /**
       * <code>required float traffic = 2;</code>
       *
       * <pre>
       * 传输流量(单位：KB)
       * </pre>
       */
      public boolean hasTraffic() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float traffic = 2;</code>
       *
       * <pre>
       * 传输流量(单位：KB)
       * </pre>
       */
      public float getTraffic() {
        return traffic_;
      }
      /**
       * <code>required float traffic = 2;</code>
       *
       * <pre>
       * 传输流量(单位：KB)
       * </pre>
       */
      public Builder setTraffic(float value) {
        bitField0_ |= 0x00000002;
        traffic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float traffic = 2;</code>
       *
       * <pre>
       * 传输流量(单位：KB)
       * </pre>
       */
      public Builder clearTraffic() {
        bitField0_ = (bitField0_ & ~0x00000002);
        traffic_ = 0F;
        onChanged();
        return this;
      }

      private int select_ ;
      /**
       * <code>required int32 select = 3;</code>
       *
       * <pre>
       * 每秒数据库操作语句数
       * </pre>
       */
      public boolean hasSelect() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 select = 3;</code>
       *
       * <pre>
       * 每秒数据库操作语句数
       * </pre>
       */
      public int getSelect() {
        return select_;
      }
      /**
       * <code>required int32 select = 3;</code>
       *
       * <pre>
       * 每秒数据库操作语句数
       * </pre>
       */
      public Builder setSelect(int value) {
        bitField0_ |= 0x00000004;
        select_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 select = 3;</code>
       *
       * <pre>
       * 每秒数据库操作语句数
       * </pre>
       */
      public Builder clearSelect() {
        bitField0_ = (bitField0_ & ~0x00000004);
        select_ = 0;
        onChanged();
        return this;
      }

      private float usage_ ;
      /**
       * <code>required float usage = 4;</code>
       *
       * <pre>
       * 缓存区buffer利用率
       * </pre>
       */
      public boolean hasUsage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float usage = 4;</code>
       *
       * <pre>
       * 缓存区buffer利用率
       * </pre>
       */
      public float getUsage() {
        return usage_;
      }
      /**
       * <code>required float usage = 4;</code>
       *
       * <pre>
       * 缓存区buffer利用率
       * </pre>
       */
      public Builder setUsage(float value) {
        bitField0_ |= 0x00000008;
        usage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float usage = 4;</code>
       *
       * <pre>
       * 缓存区buffer利用率
       * </pre>
       */
      public Builder clearUsage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        usage_ = 0F;
        onChanged();
        return this;
      }

      private int reads_ ;
      /**
       * <code>required int32 reads = 5;</code>
       *
       * <pre>
       * 每秒数据库读取数量
       * </pre>
       */
      public boolean hasReads() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 reads = 5;</code>
       *
       * <pre>
       * 每秒数据库读取数量
       * </pre>
       */
      public int getReads() {
        return reads_;
      }
      /**
       * <code>required int32 reads = 5;</code>
       *
       * <pre>
       * 每秒数据库读取数量
       * </pre>
       */
      public Builder setReads(int value) {
        bitField0_ |= 0x00000010;
        reads_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 reads = 5;</code>
       *
       * <pre>
       * 每秒数据库读取数量
       * </pre>
       */
      public Builder clearReads() {
        bitField0_ = (bitField0_ & ~0x00000010);
        reads_ = 0;
        onChanged();
        return this;
      }

      private int writes_ ;
      /**
       * <code>required int32 writes = 6;</code>
       *
       * <pre>
       * 每秒数据库写入数量
       * </pre>
       */
      public boolean hasWrites() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 writes = 6;</code>
       *
       * <pre>
       * 每秒数据库写入数量
       * </pre>
       */
      public int getWrites() {
        return writes_;
      }
      /**
       * <code>required int32 writes = 6;</code>
       *
       * <pre>
       * 每秒数据库写入数量
       * </pre>
       */
      public Builder setWrites(int value) {
        bitField0_ |= 0x00000020;
        writes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 writes = 6;</code>
       *
       * <pre>
       * 每秒数据库写入数量
       * </pre>
       */
      public Builder clearWrites() {
        bitField0_ = (bitField0_ & ~0x00000020);
        writes_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.MySqlStatus)
    }

    static {
      defaultInstance = new MySqlStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.MySqlStatus)
  }

  public interface ServiceStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.ServiceStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    java.lang.String getVersion();
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>required int64 time = 3;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required int64 time = 3;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    long getTime();

    /**
     * <code>required int64 start_time = 4;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    boolean hasStartTime();
    /**
     * <code>required int64 start_time = 4;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    long getStartTime();

    /**
     * <code>required int64 runtime = 5;</code>
     *
     * <pre>
     * 运行时长
     * </pre>
     */
    boolean hasRuntime();
    /**
     * <code>required int64 runtime = 5;</code>
     *
     * <pre>
     * 运行时长
     * </pre>
     */
    long getRuntime();

    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 状态(0:离线；1在线)
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 状态(0:离线；1在线)
     * </pre>
     */
    int getStatus();

    /**
     * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
     *
     * <pre>
     * fdfs服务时存在
     * </pre>
     */
    boolean hasFdfs();
    /**
     * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
     *
     * <pre>
     * fdfs服务时存在
     * </pre>
     */
    FacedataProcessServer.Maintainpb.FdfsStatus getFdfs();
    /**
     * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
     *
     * <pre>
     * fdfs服务时存在
     * </pre>
     */
    FacedataProcessServer.Maintainpb.FdfsStatusOrBuilder getFdfsOrBuilder();

    /**
     * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
     *
     * <pre>
     * MySql服务时存在
     * </pre>
     */
    boolean hasMysql();
    /**
     * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
     *
     * <pre>
     * MySql服务时存在
     * </pre>
     */
    FacedataProcessServer.Maintainpb.MySqlStatus getMysql();
    /**
     * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
     *
     * <pre>
     * MySql服务时存在
     * </pre>
     */
    FacedataProcessServer.Maintainpb.MySqlStatusOrBuilder getMysqlOrBuilder();
  }
  /**
   * Protobuf type {@code maintainpb.ServiceStatus}
   *
   * <pre>
   * 服务状态
   * </pre>
   */
  public static final class ServiceStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.ServiceStatus)
      ServiceStatusOrBuilder {
    // Use ServiceStatus.newBuilder() to construct.
    private ServiceStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ServiceStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ServiceStatus defaultInstance;
    public static ServiceStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ServiceStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ServiceStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              version_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              time_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              startTime_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              runtime_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              status_ = input.readInt32();
              break;
            }
            case 58: {
              FacedataProcessServer.Maintainpb.FdfsStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = fdfs_.toBuilder();
              }
              fdfs_ = input.readMessage(FacedataProcessServer.Maintainpb.FdfsStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fdfs_);
                fdfs_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              FacedataProcessServer.Maintainpb.MySqlStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = mysql_.toBuilder();
              }
              mysql_ = input.readMessage(FacedataProcessServer.Maintainpb.MySqlStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mysql_);
                mysql_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ServiceStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ServiceStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.ServiceStatus.class, FacedataProcessServer.Maintainpb.ServiceStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ServiceStatus> PARSER =
        new com.google.protobuf.AbstractParser<ServiceStatus>() {
      public ServiceStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServiceStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private java.lang.Object version_;
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 2;</code>
     *
     * <pre>
     * 版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 3;
    private long time_;
    /**
     * <code>required int64 time = 3;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 time = 3;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    public long getTime() {
      return time_;
    }

    public static final int START_TIME_FIELD_NUMBER = 4;
    private long startTime_;
    /**
     * <code>required int64 start_time = 4;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 start_time = 4;</code>
     *
     * <pre>
     * 启动时间
     * </pre>
     */
    public long getStartTime() {
      return startTime_;
    }

    public static final int RUNTIME_FIELD_NUMBER = 5;
    private long runtime_;
    /**
     * <code>required int64 runtime = 5;</code>
     *
     * <pre>
     * 运行时长
     * </pre>
     */
    public boolean hasRuntime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int64 runtime = 5;</code>
     *
     * <pre>
     * 运行时长
     * </pre>
     */
    public long getRuntime() {
      return runtime_;
    }

    public static final int STATUS_FIELD_NUMBER = 6;
    private int status_;
    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 状态(0:离线；1在线)
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 status = 6;</code>
     *
     * <pre>
     * 状态(0:离线；1在线)
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    public static final int FDFS_FIELD_NUMBER = 7;
    private FacedataProcessServer.Maintainpb.FdfsStatus fdfs_;
    /**
     * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
     *
     * <pre>
     * fdfs服务时存在
     * </pre>
     */
    public boolean hasFdfs() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
     *
     * <pre>
     * fdfs服务时存在
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.FdfsStatus getFdfs() {
      return fdfs_;
    }
    /**
     * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
     *
     * <pre>
     * fdfs服务时存在
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.FdfsStatusOrBuilder getFdfsOrBuilder() {
      return fdfs_;
    }

    public static final int MYSQL_FIELD_NUMBER = 8;
    private FacedataProcessServer.Maintainpb.MySqlStatus mysql_;
    /**
     * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
     *
     * <pre>
     * MySql服务时存在
     * </pre>
     */
    public boolean hasMysql() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
     *
     * <pre>
     * MySql服务时存在
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.MySqlStatus getMysql() {
      return mysql_;
    }
    /**
     * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
     *
     * <pre>
     * MySql服务时存在
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.MySqlStatusOrBuilder getMysqlOrBuilder() {
      return mysql_;
    }

    private void initFields() {
      name_ = "";
      version_ = "";
      time_ = 0L;
      startTime_ = 0L;
      runtime_ = 0L;
      status_ = 0;
      fdfs_ = FacedataProcessServer.Maintainpb.FdfsStatus.getDefaultInstance();
      mysql_ = FacedataProcessServer.Maintainpb.MySqlStatus.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRuntime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasFdfs()) {
        if (!getFdfs().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasMysql()) {
        if (!getMysql().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, time_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, startTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt64(5, runtime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, fdfs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, mysql_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, time_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, startTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, runtime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, status_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, fdfs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, mysql_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.ServiceStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.ServiceStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.ServiceStatus}
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.ServiceStatus)
        FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ServiceStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ServiceStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.ServiceStatus.class, FacedataProcessServer.Maintainpb.ServiceStatus.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.ServiceStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFdfsFieldBuilder();
          getMysqlFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        runtime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fdfsBuilder_ == null) {
          fdfs_ = FacedataProcessServer.Maintainpb.FdfsStatus.getDefaultInstance();
        } else {
          fdfsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (mysqlBuilder_ == null) {
          mysql_ = FacedataProcessServer.Maintainpb.MySqlStatus.getDefaultInstance();
        } else {
          mysqlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_ServiceStatus_descriptor;
      }

      public FacedataProcessServer.Maintainpb.ServiceStatus getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.ServiceStatus.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.ServiceStatus build() {
        FacedataProcessServer.Maintainpb.ServiceStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.ServiceStatus buildPartial() {
        FacedataProcessServer.Maintainpb.ServiceStatus result = new FacedataProcessServer.Maintainpb.ServiceStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.runtime_ = runtime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (fdfsBuilder_ == null) {
          result.fdfs_ = fdfs_;
        } else {
          result.fdfs_ = fdfsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (mysqlBuilder_ == null) {
          result.mysql_ = mysql_;
        } else {
          result.mysql_ = mysqlBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.ServiceStatus) {
          return mergeFrom((FacedataProcessServer.Maintainpb.ServiceStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.ServiceStatus other) {
        if (other == FacedataProcessServer.Maintainpb.ServiceStatus.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasVersion()) {
          bitField0_ |= 0x00000002;
          version_ = other.version_;
          onChanged();
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasRuntime()) {
          setRuntime(other.getRuntime());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasFdfs()) {
          mergeFdfs(other.getFdfs());
        }
        if (other.hasMysql()) {
          mergeMysql(other.getMysql());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasVersion()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        if (!hasStartTime()) {
          
          return false;
        }
        if (!hasRuntime()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (hasFdfs()) {
          if (!getFdfs().isInitialized()) {
            
            return false;
          }
        }
        if (hasMysql()) {
          if (!getMysql().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.ServiceStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.ServiceStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 2;</code>
       *
       * <pre>
       * 版本
       * </pre>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        version_ = value;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>required int64 time = 3;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 time = 3;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required int64 time = 3;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000004;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 time = 3;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <code>required int64 start_time = 4;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 start_time = 4;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <code>required int64 start_time = 4;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public Builder setStartTime(long value) {
        bitField0_ |= 0x00000008;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 start_time = 4;</code>
       *
       * <pre>
       * 启动时间
       * </pre>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long runtime_ ;
      /**
       * <code>required int64 runtime = 5;</code>
       *
       * <pre>
       * 运行时长
       * </pre>
       */
      public boolean hasRuntime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 runtime = 5;</code>
       *
       * <pre>
       * 运行时长
       * </pre>
       */
      public long getRuntime() {
        return runtime_;
      }
      /**
       * <code>required int64 runtime = 5;</code>
       *
       * <pre>
       * 运行时长
       * </pre>
       */
      public Builder setRuntime(long value) {
        bitField0_ |= 0x00000010;
        runtime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 runtime = 5;</code>
       *
       * <pre>
       * 运行时长
       * </pre>
       */
      public Builder clearRuntime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        runtime_ = 0L;
        onChanged();
        return this;
      }

      private int status_ ;
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 状态(0:离线；1在线)
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 状态(0:离线；1在线)
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 状态(0:离线；1在线)
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 6;</code>
       *
       * <pre>
       * 状态(0:离线；1在线)
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        onChanged();
        return this;
      }

      private FacedataProcessServer.Maintainpb.FdfsStatus fdfs_ = FacedataProcessServer.Maintainpb.FdfsStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.FdfsStatus, FacedataProcessServer.Maintainpb.FdfsStatus.Builder, FacedataProcessServer.Maintainpb.FdfsStatusOrBuilder> fdfsBuilder_;
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public boolean hasFdfs() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.FdfsStatus getFdfs() {
        if (fdfsBuilder_ == null) {
          return fdfs_;
        } else {
          return fdfsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public Builder setFdfs(FacedataProcessServer.Maintainpb.FdfsStatus value) {
        if (fdfsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fdfs_ = value;
          onChanged();
        } else {
          fdfsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public Builder setFdfs(
          FacedataProcessServer.Maintainpb.FdfsStatus.Builder builderForValue) {
        if (fdfsBuilder_ == null) {
          fdfs_ = builderForValue.build();
          onChanged();
        } else {
          fdfsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public Builder mergeFdfs(FacedataProcessServer.Maintainpb.FdfsStatus value) {
        if (fdfsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              fdfs_ != FacedataProcessServer.Maintainpb.FdfsStatus.getDefaultInstance()) {
            fdfs_ =
              FacedataProcessServer.Maintainpb.FdfsStatus.newBuilder(fdfs_).mergeFrom(value).buildPartial();
          } else {
            fdfs_ = value;
          }
          onChanged();
        } else {
          fdfsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public Builder clearFdfs() {
        if (fdfsBuilder_ == null) {
          fdfs_ = FacedataProcessServer.Maintainpb.FdfsStatus.getDefaultInstance();
          onChanged();
        } else {
          fdfsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.FdfsStatus.Builder getFdfsBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getFdfsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.FdfsStatusOrBuilder getFdfsOrBuilder() {
        if (fdfsBuilder_ != null) {
          return fdfsBuilder_.getMessageOrBuilder();
        } else {
          return fdfs_;
        }
      }
      /**
       * <code>optional .maintainpb.FdfsStatus fdfs = 7;</code>
       *
       * <pre>
       * fdfs服务时存在
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.FdfsStatus, FacedataProcessServer.Maintainpb.FdfsStatus.Builder, FacedataProcessServer.Maintainpb.FdfsStatusOrBuilder> 
          getFdfsFieldBuilder() {
        if (fdfsBuilder_ == null) {
          fdfsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.FdfsStatus, FacedataProcessServer.Maintainpb.FdfsStatus.Builder, FacedataProcessServer.Maintainpb.FdfsStatusOrBuilder>(
                  getFdfs(),
                  getParentForChildren(),
                  isClean());
          fdfs_ = null;
        }
        return fdfsBuilder_;
      }

      private FacedataProcessServer.Maintainpb.MySqlStatus mysql_ = FacedataProcessServer.Maintainpb.MySqlStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.MySqlStatus, FacedataProcessServer.Maintainpb.MySqlStatus.Builder, FacedataProcessServer.Maintainpb.MySqlStatusOrBuilder> mysqlBuilder_;
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public boolean hasMysql() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.MySqlStatus getMysql() {
        if (mysqlBuilder_ == null) {
          return mysql_;
        } else {
          return mysqlBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public Builder setMysql(FacedataProcessServer.Maintainpb.MySqlStatus value) {
        if (mysqlBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mysql_ = value;
          onChanged();
        } else {
          mysqlBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public Builder setMysql(
          FacedataProcessServer.Maintainpb.MySqlStatus.Builder builderForValue) {
        if (mysqlBuilder_ == null) {
          mysql_ = builderForValue.build();
          onChanged();
        } else {
          mysqlBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public Builder mergeMysql(FacedataProcessServer.Maintainpb.MySqlStatus value) {
        if (mysqlBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              mysql_ != FacedataProcessServer.Maintainpb.MySqlStatus.getDefaultInstance()) {
            mysql_ =
              FacedataProcessServer.Maintainpb.MySqlStatus.newBuilder(mysql_).mergeFrom(value).buildPartial();
          } else {
            mysql_ = value;
          }
          onChanged();
        } else {
          mysqlBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public Builder clearMysql() {
        if (mysqlBuilder_ == null) {
          mysql_ = FacedataProcessServer.Maintainpb.MySqlStatus.getDefaultInstance();
          onChanged();
        } else {
          mysqlBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.MySqlStatus.Builder getMysqlBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getMysqlFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.MySqlStatusOrBuilder getMysqlOrBuilder() {
        if (mysqlBuilder_ != null) {
          return mysqlBuilder_.getMessageOrBuilder();
        } else {
          return mysql_;
        }
      }
      /**
       * <code>optional .maintainpb.MySqlStatus mysql = 8;</code>
       *
       * <pre>
       * MySql服务时存在
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.MySqlStatus, FacedataProcessServer.Maintainpb.MySqlStatus.Builder, FacedataProcessServer.Maintainpb.MySqlStatusOrBuilder> 
          getMysqlFieldBuilder() {
        if (mysqlBuilder_ == null) {
          mysqlBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.MySqlStatus, FacedataProcessServer.Maintainpb.MySqlStatus.Builder, FacedataProcessServer.Maintainpb.MySqlStatusOrBuilder>(
                  getMysql(),
                  getParentForChildren(),
                  isClean());
          mysql_ = null;
        }
        return mysqlBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.ServiceStatus)
    }

    static {
      defaultInstance = new ServiceStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.ServiceStatus)
  }

  public interface CPUOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.CPU)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float load = 1;</code>
     *
     * <pre>
     * 负载情况
     * </pre>
     */
    boolean hasLoad();
    /**
     * <code>required float load = 1;</code>
     *
     * <pre>
     * 负载情况
     * </pre>
     */
    float getLoad();

    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    long getTime();
  }
  /**
   * Protobuf type {@code maintainpb.CPU}
   *
   * <pre>
   * CPU状态
   * </pre>
   */
  public static final class CPU extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.CPU)
      CPUOrBuilder {
    // Use CPU.newBuilder() to construct.
    private CPU(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPU(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPU defaultInstance;
    public static CPU getDefaultInstance() {
      return defaultInstance;
    }

    public CPU getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPU(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              load_ = input.readFloat();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_CPU_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_CPU_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.CPU.class, FacedataProcessServer.Maintainpb.CPU.Builder.class);
    }

    public static com.google.protobuf.Parser<CPU> PARSER =
        new com.google.protobuf.AbstractParser<CPU>() {
      public CPU parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPU(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPU> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LOAD_FIELD_NUMBER = 1;
    private float load_;
    /**
     * <code>required float load = 1;</code>
     *
     * <pre>
     * 负载情况
     * </pre>
     */
    public boolean hasLoad() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float load = 1;</code>
     *
     * <pre>
     * 负载情况
     * </pre>
     */
    public float getLoad() {
      return load_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    public long getTime() {
      return time_;
    }

    private void initFields() {
      load_ = 0F;
      time_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLoad()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, load_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, time_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, load_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.CPU parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.CPU parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.CPU prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.CPU}
     *
     * <pre>
     * CPU状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.CPU)
        FacedataProcessServer.Maintainpb.CPUOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_CPU_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_CPU_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.CPU.class, FacedataProcessServer.Maintainpb.CPU.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.CPU.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        load_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_CPU_descriptor;
      }

      public FacedataProcessServer.Maintainpb.CPU getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.CPU.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.CPU build() {
        FacedataProcessServer.Maintainpb.CPU result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.CPU buildPartial() {
        FacedataProcessServer.Maintainpb.CPU result = new FacedataProcessServer.Maintainpb.CPU(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.load_ = load_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.CPU) {
          return mergeFrom((FacedataProcessServer.Maintainpb.CPU)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.CPU other) {
        if (other == FacedataProcessServer.Maintainpb.CPU.getDefaultInstance()) return this;
        if (other.hasLoad()) {
          setLoad(other.getLoad());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLoad()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.CPU parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.CPU) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float load_ ;
      /**
       * <code>required float load = 1;</code>
       *
       * <pre>
       * 负载情况
       * </pre>
       */
      public boolean hasLoad() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float load = 1;</code>
       *
       * <pre>
       * 负载情况
       * </pre>
       */
      public float getLoad() {
        return load_;
      }
      /**
       * <code>required float load = 1;</code>
       *
       * <pre>
       * 负载情况
       * </pre>
       */
      public Builder setLoad(float value) {
        bitField0_ |= 0x00000001;
        load_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float load = 1;</code>
       *
       * <pre>
       * 负载情况
       * </pre>
       */
      public Builder clearLoad() {
        bitField0_ = (bitField0_ & ~0x00000001);
        load_ = 0F;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.CPU)
    }

    static {
      defaultInstance = new CPU(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.CPU)
  }

  public interface HarddiskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.Harddisk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    boolean hasUsed();
    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    float getUsed();

    /**
     * <code>required float free = 2;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    boolean hasFree();
    /**
     * <code>required float free = 2;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    float getFree();
  }
  /**
   * Protobuf type {@code maintainpb.Harddisk}
   *
   * <pre>
   * 硬盘状态
   * </pre>
   */
  public static final class Harddisk extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.Harddisk)
      HarddiskOrBuilder {
    // Use Harddisk.newBuilder() to construct.
    private Harddisk(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Harddisk(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Harddisk defaultInstance;
    public static Harddisk getDefaultInstance() {
      return defaultInstance;
    }

    public Harddisk getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Harddisk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              used_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              free_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Harddisk_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Harddisk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.Harddisk.class, FacedataProcessServer.Maintainpb.Harddisk.Builder.class);
    }

    public static com.google.protobuf.Parser<Harddisk> PARSER =
        new com.google.protobuf.AbstractParser<Harddisk>() {
      public Harddisk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Harddisk(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Harddisk> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int USED_FIELD_NUMBER = 1;
    private float used_;
    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    public boolean hasUsed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    public float getUsed() {
      return used_;
    }

    public static final int FREE_FIELD_NUMBER = 2;
    private float free_;
    /**
     * <code>required float free = 2;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    public boolean hasFree() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float free = 2;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    public float getFree() {
      return free_;
    }

    private void initFields() {
      used_ = 0F;
      free_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUsed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFree()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, used_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, free_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, used_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, free_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Harddisk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.Harddisk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.Harddisk}
     *
     * <pre>
     * 硬盘状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.Harddisk)
        FacedataProcessServer.Maintainpb.HarddiskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Harddisk_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Harddisk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.Harddisk.class, FacedataProcessServer.Maintainpb.Harddisk.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.Harddisk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        used_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        free_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Harddisk_descriptor;
      }

      public FacedataProcessServer.Maintainpb.Harddisk getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.Harddisk.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.Harddisk build() {
        FacedataProcessServer.Maintainpb.Harddisk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.Harddisk buildPartial() {
        FacedataProcessServer.Maintainpb.Harddisk result = new FacedataProcessServer.Maintainpb.Harddisk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.used_ = used_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.free_ = free_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.Harddisk) {
          return mergeFrom((FacedataProcessServer.Maintainpb.Harddisk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.Harddisk other) {
        if (other == FacedataProcessServer.Maintainpb.Harddisk.getDefaultInstance()) return this;
        if (other.hasUsed()) {
          setUsed(other.getUsed());
        }
        if (other.hasFree()) {
          setFree(other.getFree());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUsed()) {
          
          return false;
        }
        if (!hasFree()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.Harddisk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.Harddisk) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float used_ ;
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public boolean hasUsed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public float getUsed() {
        return used_;
      }
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public Builder setUsed(float value) {
        bitField0_ |= 0x00000001;
        used_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public Builder clearUsed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        used_ = 0F;
        onChanged();
        return this;
      }

      private float free_ ;
      /**
       * <code>required float free = 2;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public boolean hasFree() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float free = 2;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public float getFree() {
        return free_;
      }
      /**
       * <code>required float free = 2;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public Builder setFree(float value) {
        bitField0_ |= 0x00000002;
        free_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float free = 2;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public Builder clearFree() {
        bitField0_ = (bitField0_ & ~0x00000002);
        free_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.Harddisk)
    }

    static {
      defaultInstance = new Harddisk(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.Harddisk)
  }

  public interface MemoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.Memory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    boolean hasUsed();
    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    float getUsed();

    /**
     * <code>required float available = 2;</code>
     *
     * <pre>
     * 可用情况
     * </pre>
     */
    boolean hasAvailable();
    /**
     * <code>required float available = 2;</code>
     *
     * <pre>
     * 可用情况
     * </pre>
     */
    float getAvailable();

    /**
     * <code>required float free = 3;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    boolean hasFree();
    /**
     * <code>required float free = 3;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    float getFree();
  }
  /**
   * Protobuf type {@code maintainpb.Memory}
   *
   * <pre>
   * 内存状态
   * </pre>
   */
  public static final class Memory extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.Memory)
      MemoryOrBuilder {
    // Use Memory.newBuilder() to construct.
    private Memory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Memory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Memory defaultInstance;
    public static Memory getDefaultInstance() {
      return defaultInstance;
    }

    public Memory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Memory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              used_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              available_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              free_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Memory_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Memory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.Memory.class, FacedataProcessServer.Maintainpb.Memory.Builder.class);
    }

    public static com.google.protobuf.Parser<Memory> PARSER =
        new com.google.protobuf.AbstractParser<Memory>() {
      public Memory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Memory(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Memory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int USED_FIELD_NUMBER = 1;
    private float used_;
    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    public boolean hasUsed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float used = 1;</code>
     *
     * <pre>
     * 已使用情况(单位GB)
     * </pre>
     */
    public float getUsed() {
      return used_;
    }

    public static final int AVAILABLE_FIELD_NUMBER = 2;
    private float available_;
    /**
     * <code>required float available = 2;</code>
     *
     * <pre>
     * 可用情况
     * </pre>
     */
    public boolean hasAvailable() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required float available = 2;</code>
     *
     * <pre>
     * 可用情况
     * </pre>
     */
    public float getAvailable() {
      return available_;
    }

    public static final int FREE_FIELD_NUMBER = 3;
    private float free_;
    /**
     * <code>required float free = 3;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    public boolean hasFree() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float free = 3;</code>
     *
     * <pre>
     * 空闲情况
     * </pre>
     */
    public float getFree() {
      return free_;
    }

    private void initFields() {
      used_ = 0F;
      available_ = 0F;
      free_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUsed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAvailable()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFree()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, used_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, available_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, free_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, used_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, available_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, free_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.Memory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Memory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.Memory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.Memory}
     *
     * <pre>
     * 内存状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.Memory)
        FacedataProcessServer.Maintainpb.MemoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Memory_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Memory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.Memory.class, FacedataProcessServer.Maintainpb.Memory.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.Memory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        used_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        available_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        free_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Memory_descriptor;
      }

      public FacedataProcessServer.Maintainpb.Memory getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.Memory.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.Memory build() {
        FacedataProcessServer.Maintainpb.Memory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.Memory buildPartial() {
        FacedataProcessServer.Maintainpb.Memory result = new FacedataProcessServer.Maintainpb.Memory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.used_ = used_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.available_ = available_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.free_ = free_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.Memory) {
          return mergeFrom((FacedataProcessServer.Maintainpb.Memory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.Memory other) {
        if (other == FacedataProcessServer.Maintainpb.Memory.getDefaultInstance()) return this;
        if (other.hasUsed()) {
          setUsed(other.getUsed());
        }
        if (other.hasAvailable()) {
          setAvailable(other.getAvailable());
        }
        if (other.hasFree()) {
          setFree(other.getFree());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUsed()) {
          
          return false;
        }
        if (!hasAvailable()) {
          
          return false;
        }
        if (!hasFree()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.Memory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.Memory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float used_ ;
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public boolean hasUsed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public float getUsed() {
        return used_;
      }
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public Builder setUsed(float value) {
        bitField0_ |= 0x00000001;
        used_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float used = 1;</code>
       *
       * <pre>
       * 已使用情况(单位GB)
       * </pre>
       */
      public Builder clearUsed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        used_ = 0F;
        onChanged();
        return this;
      }

      private float available_ ;
      /**
       * <code>required float available = 2;</code>
       *
       * <pre>
       * 可用情况
       * </pre>
       */
      public boolean hasAvailable() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float available = 2;</code>
       *
       * <pre>
       * 可用情况
       * </pre>
       */
      public float getAvailable() {
        return available_;
      }
      /**
       * <code>required float available = 2;</code>
       *
       * <pre>
       * 可用情况
       * </pre>
       */
      public Builder setAvailable(float value) {
        bitField0_ |= 0x00000002;
        available_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float available = 2;</code>
       *
       * <pre>
       * 可用情况
       * </pre>
       */
      public Builder clearAvailable() {
        bitField0_ = (bitField0_ & ~0x00000002);
        available_ = 0F;
        onChanged();
        return this;
      }

      private float free_ ;
      /**
       * <code>required float free = 3;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public boolean hasFree() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float free = 3;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public float getFree() {
        return free_;
      }
      /**
       * <code>required float free = 3;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public Builder setFree(float value) {
        bitField0_ |= 0x00000004;
        free_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float free = 3;</code>
       *
       * <pre>
       * 空闲情况
       * </pre>
       */
      public Builder clearFree() {
        bitField0_ = (bitField0_ & ~0x00000004);
        free_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.Memory)
    }

    static {
      defaultInstance = new Memory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.Memory)
  }

  public interface NetworkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.Network)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 load = 1;</code>
     *
     * <pre>
     * 负载
     * </pre>
     */
    boolean hasLoad();
    /**
     * <code>required uint32 load = 1;</code>
     *
     * <pre>
     * 负载
     * </pre>
     */
    int getLoad();

    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    boolean hasTime();
    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    long getTime();
  }
  /**
   * Protobuf type {@code maintainpb.Network}
   *
   * <pre>
   * 网卡状态
   * </pre>
   */
  public static final class Network extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.Network)
      NetworkOrBuilder {
    // Use Network.newBuilder() to construct.
    private Network(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Network(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Network defaultInstance;
    public static Network getDefaultInstance() {
      return defaultInstance;
    }

    public Network getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Network(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              load_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Network_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Network_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.Network.class, FacedataProcessServer.Maintainpb.Network.Builder.class);
    }

    public static com.google.protobuf.Parser<Network> PARSER =
        new com.google.protobuf.AbstractParser<Network>() {
      public Network parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Network(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Network> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int LOAD_FIELD_NUMBER = 1;
    private int load_;
    /**
     * <code>required uint32 load = 1;</code>
     *
     * <pre>
     * 负载
     * </pre>
     */
    public boolean hasLoad() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 load = 1;</code>
     *
     * <pre>
     * 负载
     * </pre>
     */
    public int getLoad() {
      return load_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint64 time = 2;</code>
     *
     * <pre>
     * 当前时间
     * </pre>
     */
    public long getTime() {
      return time_;
    }

    private void initFields() {
      load_ = 0;
      time_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasLoad()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, load_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, time_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, load_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.Network parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Network parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Network parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Network parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Network parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Network parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Network parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Network parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Network parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Network parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.Network prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.Network}
     *
     * <pre>
     * 网卡状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.Network)
        FacedataProcessServer.Maintainpb.NetworkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Network_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Network_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.Network.class, FacedataProcessServer.Maintainpb.Network.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.Network.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        load_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Network_descriptor;
      }

      public FacedataProcessServer.Maintainpb.Network getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.Network.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.Network build() {
        FacedataProcessServer.Maintainpb.Network result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.Network buildPartial() {
        FacedataProcessServer.Maintainpb.Network result = new FacedataProcessServer.Maintainpb.Network(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.load_ = load_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.Network) {
          return mergeFrom((FacedataProcessServer.Maintainpb.Network)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.Network other) {
        if (other == FacedataProcessServer.Maintainpb.Network.getDefaultInstance()) return this;
        if (other.hasLoad()) {
          setLoad(other.getLoad());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasLoad()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.Network parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.Network) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int load_ ;
      /**
       * <code>required uint32 load = 1;</code>
       *
       * <pre>
       * 负载
       * </pre>
       */
      public boolean hasLoad() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 load = 1;</code>
       *
       * <pre>
       * 负载
       * </pre>
       */
      public int getLoad() {
        return load_;
      }
      /**
       * <code>required uint32 load = 1;</code>
       *
       * <pre>
       * 负载
       * </pre>
       */
      public Builder setLoad(int value) {
        bitField0_ |= 0x00000001;
        load_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 load = 1;</code>
       *
       * <pre>
       * 负载
       * </pre>
       */
      public Builder clearLoad() {
        bitField0_ = (bitField0_ & ~0x00000001);
        load_ = 0;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 time = 2;</code>
       *
       * <pre>
       * 当前时间
       * </pre>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.Network)
    }

    static {
      defaultInstance = new Network(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.Network)
  }

  public interface SysParaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.SysPara)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string cpu = 1;</code>
     *
     * <pre>
     * cpu
     * </pre>
     */
    boolean hasCpu();
    /**
     * <code>required string cpu = 1;</code>
     *
     * <pre>
     * cpu
     * </pre>
     */
    java.lang.String getCpu();
    /**
     * <code>required string cpu = 1;</code>
     *
     * <pre>
     * cpu
     * </pre>
     */
    com.google.protobuf.ByteString
        getCpuBytes();

    /**
     * <code>required string ssd = 2;</code>
     *
     * <pre>
     * 固态盘
     * </pre>
     */
    boolean hasSsd();
    /**
     * <code>required string ssd = 2;</code>
     *
     * <pre>
     * 固态盘
     * </pre>
     */
    java.lang.String getSsd();
    /**
     * <code>required string ssd = 2;</code>
     *
     * <pre>
     * 固态盘
     * </pre>
     */
    com.google.protobuf.ByteString
        getSsdBytes();

    /**
     * <code>required string harddisk = 3;</code>
     *
     * <pre>
     * 硬盘
     * </pre>
     */
    boolean hasHarddisk();
    /**
     * <code>required string harddisk = 3;</code>
     *
     * <pre>
     * 硬盘
     * </pre>
     */
    java.lang.String getHarddisk();
    /**
     * <code>required string harddisk = 3;</code>
     *
     * <pre>
     * 硬盘
     * </pre>
     */
    com.google.protobuf.ByteString
        getHarddiskBytes();

    /**
     * <code>required string memory = 4;</code>
     *
     * <pre>
     * 内存
     * </pre>
     */
    boolean hasMemory();
    /**
     * <code>required string memory = 4;</code>
     *
     * <pre>
     * 内存
     * </pre>
     */
    java.lang.String getMemory();
    /**
     * <code>required string memory = 4;</code>
     *
     * <pre>
     * 内存
     * </pre>
     */
    com.google.protobuf.ByteString
        getMemoryBytes();

    /**
     * <code>required string ip = 5;</code>
     *
     * <pre>
     * ip
     * </pre>
     */
    boolean hasIp();
    /**
     * <code>required string ip = 5;</code>
     *
     * <pre>
     * ip
     * </pre>
     */
    java.lang.String getIp();
    /**
     * <code>required string ip = 5;</code>
     *
     * <pre>
     * ip
     * </pre>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>required string gateway = 6;</code>
     *
     * <pre>
     * 网关
     * </pre>
     */
    boolean hasGateway();
    /**
     * <code>required string gateway = 6;</code>
     *
     * <pre>
     * 网关
     * </pre>
     */
    java.lang.String getGateway();
    /**
     * <code>required string gateway = 6;</code>
     *
     * <pre>
     * 网关
     * </pre>
     */
    com.google.protobuf.ByteString
        getGatewayBytes();

    /**
     * <code>required string softdog = 7;</code>
     *
     * <pre>
     * 加密狗
     * </pre>
     */
    boolean hasSoftdog();
    /**
     * <code>required string softdog = 7;</code>
     *
     * <pre>
     * 加密狗
     * </pre>
     */
    java.lang.String getSoftdog();
    /**
     * <code>required string softdog = 7;</code>
     *
     * <pre>
     * 加密狗
     * </pre>
     */
    com.google.protobuf.ByteString
        getSoftdogBytes();
  }
  /**
   * Protobuf type {@code maintainpb.SysPara}
   *
   * <pre>
   * 系统参数
   * </pre>
   */
  public static final class SysPara extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.SysPara)
      SysParaOrBuilder {
    // Use SysPara.newBuilder() to construct.
    private SysPara(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SysPara(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SysPara defaultInstance;
    public static SysPara getDefaultInstance() {
      return defaultInstance;
    }

    public SysPara getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SysPara(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              cpu_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              ssd_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              harddisk_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              memory_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              ip_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              gateway_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              softdog_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_SysPara_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_SysPara_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.SysPara.class, FacedataProcessServer.Maintainpb.SysPara.Builder.class);
    }

    public static com.google.protobuf.Parser<SysPara> PARSER =
        new com.google.protobuf.AbstractParser<SysPara>() {
      public SysPara parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SysPara(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SysPara> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CPU_FIELD_NUMBER = 1;
    private java.lang.Object cpu_;
    /**
     * <code>required string cpu = 1;</code>
     *
     * <pre>
     * cpu
     * </pre>
     */
    public boolean hasCpu() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string cpu = 1;</code>
     *
     * <pre>
     * cpu
     * </pre>
     */
    public java.lang.String getCpu() {
      java.lang.Object ref = cpu_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cpu_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string cpu = 1;</code>
     *
     * <pre>
     * cpu
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCpuBytes() {
      java.lang.Object ref = cpu_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cpu_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SSD_FIELD_NUMBER = 2;
    private java.lang.Object ssd_;
    /**
     * <code>required string ssd = 2;</code>
     *
     * <pre>
     * 固态盘
     * </pre>
     */
    public boolean hasSsd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ssd = 2;</code>
     *
     * <pre>
     * 固态盘
     * </pre>
     */
    public java.lang.String getSsd() {
      java.lang.Object ref = ssd_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ssd_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ssd = 2;</code>
     *
     * <pre>
     * 固态盘
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSsdBytes() {
      java.lang.Object ref = ssd_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ssd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HARDDISK_FIELD_NUMBER = 3;
    private java.lang.Object harddisk_;
    /**
     * <code>required string harddisk = 3;</code>
     *
     * <pre>
     * 硬盘
     * </pre>
     */
    public boolean hasHarddisk() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string harddisk = 3;</code>
     *
     * <pre>
     * 硬盘
     * </pre>
     */
    public java.lang.String getHarddisk() {
      java.lang.Object ref = harddisk_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          harddisk_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string harddisk = 3;</code>
     *
     * <pre>
     * 硬盘
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHarddiskBytes() {
      java.lang.Object ref = harddisk_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        harddisk_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEMORY_FIELD_NUMBER = 4;
    private java.lang.Object memory_;
    /**
     * <code>required string memory = 4;</code>
     *
     * <pre>
     * 内存
     * </pre>
     */
    public boolean hasMemory() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string memory = 4;</code>
     *
     * <pre>
     * 内存
     * </pre>
     */
    public java.lang.String getMemory() {
      java.lang.Object ref = memory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          memory_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string memory = 4;</code>
     *
     * <pre>
     * 内存
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMemoryBytes() {
      java.lang.Object ref = memory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        memory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IP_FIELD_NUMBER = 5;
    private java.lang.Object ip_;
    /**
     * <code>required string ip = 5;</code>
     *
     * <pre>
     * ip
     * </pre>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string ip = 5;</code>
     *
     * <pre>
     * ip
     * </pre>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ip = 5;</code>
     *
     * <pre>
     * ip
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GATEWAY_FIELD_NUMBER = 6;
    private java.lang.Object gateway_;
    /**
     * <code>required string gateway = 6;</code>
     *
     * <pre>
     * 网关
     * </pre>
     */
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required string gateway = 6;</code>
     *
     * <pre>
     * 网关
     * </pre>
     */
    public java.lang.String getGateway() {
      java.lang.Object ref = gateway_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gateway_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string gateway = 6;</code>
     *
     * <pre>
     * 网关
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGatewayBytes() {
      java.lang.Object ref = gateway_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOFTDOG_FIELD_NUMBER = 7;
    private java.lang.Object softdog_;
    /**
     * <code>required string softdog = 7;</code>
     *
     * <pre>
     * 加密狗
     * </pre>
     */
    public boolean hasSoftdog() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required string softdog = 7;</code>
     *
     * <pre>
     * 加密狗
     * </pre>
     */
    public java.lang.String getSoftdog() {
      java.lang.Object ref = softdog_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          softdog_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string softdog = 7;</code>
     *
     * <pre>
     * 加密狗
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSoftdogBytes() {
      java.lang.Object ref = softdog_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        softdog_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      cpu_ = "";
      ssd_ = "";
      harddisk_ = "";
      memory_ = "";
      ip_ = "";
      gateway_ = "";
      softdog_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCpu()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSsd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHarddisk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemory()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGateway()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSoftdog()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getCpuBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSsdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getHarddiskBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getMemoryBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getSoftdogBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getCpuBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSsdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getHarddiskBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getMemoryBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getSoftdogBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.SysPara parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.SysPara prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.SysPara}
     *
     * <pre>
     * 系统参数
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.SysPara)
        FacedataProcessServer.Maintainpb.SysParaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_SysPara_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_SysPara_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.SysPara.class, FacedataProcessServer.Maintainpb.SysPara.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.SysPara.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cpu_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ssd_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        harddisk_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        memory_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        gateway_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        softdog_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_SysPara_descriptor;
      }

      public FacedataProcessServer.Maintainpb.SysPara getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.SysPara.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.SysPara build() {
        FacedataProcessServer.Maintainpb.SysPara result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.SysPara buildPartial() {
        FacedataProcessServer.Maintainpb.SysPara result = new FacedataProcessServer.Maintainpb.SysPara(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cpu_ = cpu_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ssd_ = ssd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.harddisk_ = harddisk_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.memory_ = memory_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.softdog_ = softdog_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.SysPara) {
          return mergeFrom((FacedataProcessServer.Maintainpb.SysPara)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.SysPara other) {
        if (other == FacedataProcessServer.Maintainpb.SysPara.getDefaultInstance()) return this;
        if (other.hasCpu()) {
          bitField0_ |= 0x00000001;
          cpu_ = other.cpu_;
          onChanged();
        }
        if (other.hasSsd()) {
          bitField0_ |= 0x00000002;
          ssd_ = other.ssd_;
          onChanged();
        }
        if (other.hasHarddisk()) {
          bitField0_ |= 0x00000004;
          harddisk_ = other.harddisk_;
          onChanged();
        }
        if (other.hasMemory()) {
          bitField0_ |= 0x00000008;
          memory_ = other.memory_;
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000010;
          ip_ = other.ip_;
          onChanged();
        }
        if (other.hasGateway()) {
          bitField0_ |= 0x00000020;
          gateway_ = other.gateway_;
          onChanged();
        }
        if (other.hasSoftdog()) {
          bitField0_ |= 0x00000040;
          softdog_ = other.softdog_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCpu()) {
          
          return false;
        }
        if (!hasSsd()) {
          
          return false;
        }
        if (!hasHarddisk()) {
          
          return false;
        }
        if (!hasMemory()) {
          
          return false;
        }
        if (!hasIp()) {
          
          return false;
        }
        if (!hasGateway()) {
          
          return false;
        }
        if (!hasSoftdog()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.SysPara parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.SysPara) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object cpu_ = "";
      /**
       * <code>required string cpu = 1;</code>
       *
       * <pre>
       * cpu
       * </pre>
       */
      public boolean hasCpu() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string cpu = 1;</code>
       *
       * <pre>
       * cpu
       * </pre>
       */
      public java.lang.String getCpu() {
        java.lang.Object ref = cpu_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            cpu_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string cpu = 1;</code>
       *
       * <pre>
       * cpu
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCpuBytes() {
        java.lang.Object ref = cpu_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cpu_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string cpu = 1;</code>
       *
       * <pre>
       * cpu
       * </pre>
       */
      public Builder setCpu(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cpu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string cpu = 1;</code>
       *
       * <pre>
       * cpu
       * </pre>
       */
      public Builder clearCpu() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cpu_ = getDefaultInstance().getCpu();
        onChanged();
        return this;
      }
      /**
       * <code>required string cpu = 1;</code>
       *
       * <pre>
       * cpu
       * </pre>
       */
      public Builder setCpuBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        cpu_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ssd_ = "";
      /**
       * <code>required string ssd = 2;</code>
       *
       * <pre>
       * 固态盘
       * </pre>
       */
      public boolean hasSsd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string ssd = 2;</code>
       *
       * <pre>
       * 固态盘
       * </pre>
       */
      public java.lang.String getSsd() {
        java.lang.Object ref = ssd_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ssd_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ssd = 2;</code>
       *
       * <pre>
       * 固态盘
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSsdBytes() {
        java.lang.Object ref = ssd_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ssd_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ssd = 2;</code>
       *
       * <pre>
       * 固态盘
       * </pre>
       */
      public Builder setSsd(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ssd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ssd = 2;</code>
       *
       * <pre>
       * 固态盘
       * </pre>
       */
      public Builder clearSsd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ssd_ = getDefaultInstance().getSsd();
        onChanged();
        return this;
      }
      /**
       * <code>required string ssd = 2;</code>
       *
       * <pre>
       * 固态盘
       * </pre>
       */
      public Builder setSsdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ssd_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object harddisk_ = "";
      /**
       * <code>required string harddisk = 3;</code>
       *
       * <pre>
       * 硬盘
       * </pre>
       */
      public boolean hasHarddisk() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string harddisk = 3;</code>
       *
       * <pre>
       * 硬盘
       * </pre>
       */
      public java.lang.String getHarddisk() {
        java.lang.Object ref = harddisk_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            harddisk_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string harddisk = 3;</code>
       *
       * <pre>
       * 硬盘
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHarddiskBytes() {
        java.lang.Object ref = harddisk_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          harddisk_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string harddisk = 3;</code>
       *
       * <pre>
       * 硬盘
       * </pre>
       */
      public Builder setHarddisk(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        harddisk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string harddisk = 3;</code>
       *
       * <pre>
       * 硬盘
       * </pre>
       */
      public Builder clearHarddisk() {
        bitField0_ = (bitField0_ & ~0x00000004);
        harddisk_ = getDefaultInstance().getHarddisk();
        onChanged();
        return this;
      }
      /**
       * <code>required string harddisk = 3;</code>
       *
       * <pre>
       * 硬盘
       * </pre>
       */
      public Builder setHarddiskBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        harddisk_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object memory_ = "";
      /**
       * <code>required string memory = 4;</code>
       *
       * <pre>
       * 内存
       * </pre>
       */
      public boolean hasMemory() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string memory = 4;</code>
       *
       * <pre>
       * 内存
       * </pre>
       */
      public java.lang.String getMemory() {
        java.lang.Object ref = memory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            memory_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string memory = 4;</code>
       *
       * <pre>
       * 内存
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMemoryBytes() {
        java.lang.Object ref = memory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          memory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string memory = 4;</code>
       *
       * <pre>
       * 内存
       * </pre>
       */
      public Builder setMemory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        memory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string memory = 4;</code>
       *
       * <pre>
       * 内存
       * </pre>
       */
      public Builder clearMemory() {
        bitField0_ = (bitField0_ & ~0x00000008);
        memory_ = getDefaultInstance().getMemory();
        onChanged();
        return this;
      }
      /**
       * <code>required string memory = 4;</code>
       *
       * <pre>
       * 内存
       * </pre>
       */
      public Builder setMemoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        memory_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <code>required string ip = 5;</code>
       *
       * <pre>
       * ip
       * </pre>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string ip = 5;</code>
       *
       * <pre>
       * ip
       * </pre>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ip = 5;</code>
       *
       * <pre>
       * ip
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ip = 5;</code>
       *
       * <pre>
       * ip
       * </pre>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 5;</code>
       *
       * <pre>
       * ip
       * </pre>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>required string ip = 5;</code>
       *
       * <pre>
       * ip
       * </pre>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gateway_ = "";
      /**
       * <code>required string gateway = 6;</code>
       *
       * <pre>
       * 网关
       * </pre>
       */
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required string gateway = 6;</code>
       *
       * <pre>
       * 网关
       * </pre>
       */
      public java.lang.String getGateway() {
        java.lang.Object ref = gateway_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gateway_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string gateway = 6;</code>
       *
       * <pre>
       * 网关
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGatewayBytes() {
        java.lang.Object ref = gateway_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gateway_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string gateway = 6;</code>
       *
       * <pre>
       * 网关
       * </pre>
       */
      public Builder setGateway(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        gateway_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string gateway = 6;</code>
       *
       * <pre>
       * 网关
       * </pre>
       */
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gateway_ = getDefaultInstance().getGateway();
        onChanged();
        return this;
      }
      /**
       * <code>required string gateway = 6;</code>
       *
       * <pre>
       * 网关
       * </pre>
       */
      public Builder setGatewayBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        gateway_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object softdog_ = "";
      /**
       * <code>required string softdog = 7;</code>
       *
       * <pre>
       * 加密狗
       * </pre>
       */
      public boolean hasSoftdog() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required string softdog = 7;</code>
       *
       * <pre>
       * 加密狗
       * </pre>
       */
      public java.lang.String getSoftdog() {
        java.lang.Object ref = softdog_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            softdog_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string softdog = 7;</code>
       *
       * <pre>
       * 加密狗
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSoftdogBytes() {
        java.lang.Object ref = softdog_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          softdog_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string softdog = 7;</code>
       *
       * <pre>
       * 加密狗
       * </pre>
       */
      public Builder setSoftdog(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        softdog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string softdog = 7;</code>
       *
       * <pre>
       * 加密狗
       * </pre>
       */
      public Builder clearSoftdog() {
        bitField0_ = (bitField0_ & ~0x00000040);
        softdog_ = getDefaultInstance().getSoftdog();
        onChanged();
        return this;
      }
      /**
       * <code>required string softdog = 7;</code>
       *
       * <pre>
       * 加密狗
       * </pre>
       */
      public Builder setSoftdogBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        softdog_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.SysPara)
    }

    static {
      defaultInstance = new SysPara(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.SysPara)
  }

  public interface DeviceStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.DeviceStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .maintainpb.CPU cpu = 1;</code>
     *
     * <pre>
     * CPU状态
     * </pre>
     */
    boolean hasCpu();
    /**
     * <code>required .maintainpb.CPU cpu = 1;</code>
     *
     * <pre>
     * CPU状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.CPU getCpu();
    /**
     * <code>required .maintainpb.CPU cpu = 1;</code>
     *
     * <pre>
     * CPU状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.CPUOrBuilder getCpuOrBuilder();

    /**
     * <code>required .maintainpb.Harddisk harddisk = 2;</code>
     *
     * <pre>
     * 硬盘状态
     * </pre>
     */
    boolean hasHarddisk();
    /**
     * <code>required .maintainpb.Harddisk harddisk = 2;</code>
     *
     * <pre>
     * 硬盘状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.Harddisk getHarddisk();
    /**
     * <code>required .maintainpb.Harddisk harddisk = 2;</code>
     *
     * <pre>
     * 硬盘状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.HarddiskOrBuilder getHarddiskOrBuilder();

    /**
     * <code>required .maintainpb.Memory memory = 3;</code>
     *
     * <pre>
     * 内存状态
     * </pre>
     */
    boolean hasMemory();
    /**
     * <code>required .maintainpb.Memory memory = 3;</code>
     *
     * <pre>
     * 内存状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.Memory getMemory();
    /**
     * <code>required .maintainpb.Memory memory = 3;</code>
     *
     * <pre>
     * 内存状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.MemoryOrBuilder getMemoryOrBuilder();

    /**
     * <code>required .maintainpb.Network network = 4;</code>
     *
     * <pre>
     * 网卡状态
     * </pre>
     */
    boolean hasNetwork();
    /**
     * <code>required .maintainpb.Network network = 4;</code>
     *
     * <pre>
     * 网卡状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.Network getNetwork();
    /**
     * <code>required .maintainpb.Network network = 4;</code>
     *
     * <pre>
     * 网卡状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.NetworkOrBuilder getNetworkOrBuilder();

    /**
     * <code>optional .maintainpb.SysPara sys_para = 5;</code>
     *
     * <pre>
     * 系统参数
     * </pre>
     */
    boolean hasSysPara();
    /**
     * <code>optional .maintainpb.SysPara sys_para = 5;</code>
     *
     * <pre>
     * 系统参数
     * </pre>
     */
    FacedataProcessServer.Maintainpb.SysPara getSysPara();
    /**
     * <code>optional .maintainpb.SysPara sys_para = 5;</code>
     *
     * <pre>
     * 系统参数
     * </pre>
     */
    FacedataProcessServer.Maintainpb.SysParaOrBuilder getSysParaOrBuilder();
  }
  /**
   * Protobuf type {@code maintainpb.DeviceStatus}
   *
   * <pre>
   * 设备状态
   * </pre>
   */
  public static final class DeviceStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.DeviceStatus)
      DeviceStatusOrBuilder {
    // Use DeviceStatus.newBuilder() to construct.
    private DeviceStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeviceStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeviceStatus defaultInstance;
    public static DeviceStatus getDefaultInstance() {
      return defaultInstance;
    }

    public DeviceStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              FacedataProcessServer.Maintainpb.CPU.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = cpu_.toBuilder();
              }
              cpu_ = input.readMessage(FacedataProcessServer.Maintainpb.CPU.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cpu_);
                cpu_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              FacedataProcessServer.Maintainpb.Harddisk.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = harddisk_.toBuilder();
              }
              harddisk_ = input.readMessage(FacedataProcessServer.Maintainpb.Harddisk.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(harddisk_);
                harddisk_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              FacedataProcessServer.Maintainpb.Memory.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = memory_.toBuilder();
              }
              memory_ = input.readMessage(FacedataProcessServer.Maintainpb.Memory.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(memory_);
                memory_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              FacedataProcessServer.Maintainpb.Network.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = network_.toBuilder();
              }
              network_ = input.readMessage(FacedataProcessServer.Maintainpb.Network.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(network_);
                network_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              FacedataProcessServer.Maintainpb.SysPara.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = sysPara_.toBuilder();
              }
              sysPara_ = input.readMessage(FacedataProcessServer.Maintainpb.SysPara.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sysPara_);
                sysPara_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DeviceStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DeviceStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.DeviceStatus.class, FacedataProcessServer.Maintainpb.DeviceStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<DeviceStatus> PARSER =
        new com.google.protobuf.AbstractParser<DeviceStatus>() {
      public DeviceStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CPU_FIELD_NUMBER = 1;
    private FacedataProcessServer.Maintainpb.CPU cpu_;
    /**
     * <code>required .maintainpb.CPU cpu = 1;</code>
     *
     * <pre>
     * CPU状态
     * </pre>
     */
    public boolean hasCpu() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .maintainpb.CPU cpu = 1;</code>
     *
     * <pre>
     * CPU状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.CPU getCpu() {
      return cpu_;
    }
    /**
     * <code>required .maintainpb.CPU cpu = 1;</code>
     *
     * <pre>
     * CPU状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.CPUOrBuilder getCpuOrBuilder() {
      return cpu_;
    }

    public static final int HARDDISK_FIELD_NUMBER = 2;
    private FacedataProcessServer.Maintainpb.Harddisk harddisk_;
    /**
     * <code>required .maintainpb.Harddisk harddisk = 2;</code>
     *
     * <pre>
     * 硬盘状态
     * </pre>
     */
    public boolean hasHarddisk() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .maintainpb.Harddisk harddisk = 2;</code>
     *
     * <pre>
     * 硬盘状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.Harddisk getHarddisk() {
      return harddisk_;
    }
    /**
     * <code>required .maintainpb.Harddisk harddisk = 2;</code>
     *
     * <pre>
     * 硬盘状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.HarddiskOrBuilder getHarddiskOrBuilder() {
      return harddisk_;
    }

    public static final int MEMORY_FIELD_NUMBER = 3;
    private FacedataProcessServer.Maintainpb.Memory memory_;
    /**
     * <code>required .maintainpb.Memory memory = 3;</code>
     *
     * <pre>
     * 内存状态
     * </pre>
     */
    public boolean hasMemory() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .maintainpb.Memory memory = 3;</code>
     *
     * <pre>
     * 内存状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.Memory getMemory() {
      return memory_;
    }
    /**
     * <code>required .maintainpb.Memory memory = 3;</code>
     *
     * <pre>
     * 内存状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.MemoryOrBuilder getMemoryOrBuilder() {
      return memory_;
    }

    public static final int NETWORK_FIELD_NUMBER = 4;
    private FacedataProcessServer.Maintainpb.Network network_;
    /**
     * <code>required .maintainpb.Network network = 4;</code>
     *
     * <pre>
     * 网卡状态
     * </pre>
     */
    public boolean hasNetwork() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .maintainpb.Network network = 4;</code>
     *
     * <pre>
     * 网卡状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.Network getNetwork() {
      return network_;
    }
    /**
     * <code>required .maintainpb.Network network = 4;</code>
     *
     * <pre>
     * 网卡状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.NetworkOrBuilder getNetworkOrBuilder() {
      return network_;
    }

    public static final int SYS_PARA_FIELD_NUMBER = 5;
    private FacedataProcessServer.Maintainpb.SysPara sysPara_;
    /**
     * <code>optional .maintainpb.SysPara sys_para = 5;</code>
     *
     * <pre>
     * 系统参数
     * </pre>
     */
    public boolean hasSysPara() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .maintainpb.SysPara sys_para = 5;</code>
     *
     * <pre>
     * 系统参数
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.SysPara getSysPara() {
      return sysPara_;
    }
    /**
     * <code>optional .maintainpb.SysPara sys_para = 5;</code>
     *
     * <pre>
     * 系统参数
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.SysParaOrBuilder getSysParaOrBuilder() {
      return sysPara_;
    }

    private void initFields() {
      cpu_ = FacedataProcessServer.Maintainpb.CPU.getDefaultInstance();
      harddisk_ = FacedataProcessServer.Maintainpb.Harddisk.getDefaultInstance();
      memory_ = FacedataProcessServer.Maintainpb.Memory.getDefaultInstance();
      network_ = FacedataProcessServer.Maintainpb.Network.getDefaultInstance();
      sysPara_ = FacedataProcessServer.Maintainpb.SysPara.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCpu()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHarddisk()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemory()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNetwork()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCpu().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getHarddisk().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMemory().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getNetwork().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSysPara()) {
        if (!getSysPara().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, cpu_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, harddisk_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, memory_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, network_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, sysPara_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cpu_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, harddisk_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, memory_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, network_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sysPara_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DeviceStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.DeviceStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.DeviceStatus}
     *
     * <pre>
     * 设备状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.DeviceStatus)
        FacedataProcessServer.Maintainpb.DeviceStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DeviceStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DeviceStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.DeviceStatus.class, FacedataProcessServer.Maintainpb.DeviceStatus.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.DeviceStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCpuFieldBuilder();
          getHarddiskFieldBuilder();
          getMemoryFieldBuilder();
          getNetworkFieldBuilder();
          getSysParaFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cpuBuilder_ == null) {
          cpu_ = FacedataProcessServer.Maintainpb.CPU.getDefaultInstance();
        } else {
          cpuBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (harddiskBuilder_ == null) {
          harddisk_ = FacedataProcessServer.Maintainpb.Harddisk.getDefaultInstance();
        } else {
          harddiskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (memoryBuilder_ == null) {
          memory_ = FacedataProcessServer.Maintainpb.Memory.getDefaultInstance();
        } else {
          memoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (networkBuilder_ == null) {
          network_ = FacedataProcessServer.Maintainpb.Network.getDefaultInstance();
        } else {
          networkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (sysParaBuilder_ == null) {
          sysPara_ = FacedataProcessServer.Maintainpb.SysPara.getDefaultInstance();
        } else {
          sysParaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DeviceStatus_descriptor;
      }

      public FacedataProcessServer.Maintainpb.DeviceStatus getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.DeviceStatus.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.DeviceStatus build() {
        FacedataProcessServer.Maintainpb.DeviceStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.DeviceStatus buildPartial() {
        FacedataProcessServer.Maintainpb.DeviceStatus result = new FacedataProcessServer.Maintainpb.DeviceStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (cpuBuilder_ == null) {
          result.cpu_ = cpu_;
        } else {
          result.cpu_ = cpuBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (harddiskBuilder_ == null) {
          result.harddisk_ = harddisk_;
        } else {
          result.harddisk_ = harddiskBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (memoryBuilder_ == null) {
          result.memory_ = memory_;
        } else {
          result.memory_ = memoryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (sysParaBuilder_ == null) {
          result.sysPara_ = sysPara_;
        } else {
          result.sysPara_ = sysParaBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.DeviceStatus) {
          return mergeFrom((FacedataProcessServer.Maintainpb.DeviceStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.DeviceStatus other) {
        if (other == FacedataProcessServer.Maintainpb.DeviceStatus.getDefaultInstance()) return this;
        if (other.hasCpu()) {
          mergeCpu(other.getCpu());
        }
        if (other.hasHarddisk()) {
          mergeHarddisk(other.getHarddisk());
        }
        if (other.hasMemory()) {
          mergeMemory(other.getMemory());
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        if (other.hasSysPara()) {
          mergeSysPara(other.getSysPara());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCpu()) {
          
          return false;
        }
        if (!hasHarddisk()) {
          
          return false;
        }
        if (!hasMemory()) {
          
          return false;
        }
        if (!hasNetwork()) {
          
          return false;
        }
        if (!getCpu().isInitialized()) {
          
          return false;
        }
        if (!getHarddisk().isInitialized()) {
          
          return false;
        }
        if (!getMemory().isInitialized()) {
          
          return false;
        }
        if (!getNetwork().isInitialized()) {
          
          return false;
        }
        if (hasSysPara()) {
          if (!getSysPara().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.DeviceStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.DeviceStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private FacedataProcessServer.Maintainpb.CPU cpu_ = FacedataProcessServer.Maintainpb.CPU.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.CPU, FacedataProcessServer.Maintainpb.CPU.Builder, FacedataProcessServer.Maintainpb.CPUOrBuilder> cpuBuilder_;
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public boolean hasCpu() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.CPU getCpu() {
        if (cpuBuilder_ == null) {
          return cpu_;
        } else {
          return cpuBuilder_.getMessage();
        }
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public Builder setCpu(FacedataProcessServer.Maintainpb.CPU value) {
        if (cpuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cpu_ = value;
          onChanged();
        } else {
          cpuBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public Builder setCpu(
          FacedataProcessServer.Maintainpb.CPU.Builder builderForValue) {
        if (cpuBuilder_ == null) {
          cpu_ = builderForValue.build();
          onChanged();
        } else {
          cpuBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public Builder mergeCpu(FacedataProcessServer.Maintainpb.CPU value) {
        if (cpuBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              cpu_ != FacedataProcessServer.Maintainpb.CPU.getDefaultInstance()) {
            cpu_ =
              FacedataProcessServer.Maintainpb.CPU.newBuilder(cpu_).mergeFrom(value).buildPartial();
          } else {
            cpu_ = value;
          }
          onChanged();
        } else {
          cpuBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public Builder clearCpu() {
        if (cpuBuilder_ == null) {
          cpu_ = FacedataProcessServer.Maintainpb.CPU.getDefaultInstance();
          onChanged();
        } else {
          cpuBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.CPU.Builder getCpuBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCpuFieldBuilder().getBuilder();
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.CPUOrBuilder getCpuOrBuilder() {
        if (cpuBuilder_ != null) {
          return cpuBuilder_.getMessageOrBuilder();
        } else {
          return cpu_;
        }
      }
      /**
       * <code>required .maintainpb.CPU cpu = 1;</code>
       *
       * <pre>
       * CPU状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.CPU, FacedataProcessServer.Maintainpb.CPU.Builder, FacedataProcessServer.Maintainpb.CPUOrBuilder> 
          getCpuFieldBuilder() {
        if (cpuBuilder_ == null) {
          cpuBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.CPU, FacedataProcessServer.Maintainpb.CPU.Builder, FacedataProcessServer.Maintainpb.CPUOrBuilder>(
                  getCpu(),
                  getParentForChildren(),
                  isClean());
          cpu_ = null;
        }
        return cpuBuilder_;
      }

      private FacedataProcessServer.Maintainpb.Harddisk harddisk_ = FacedataProcessServer.Maintainpb.Harddisk.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Harddisk, FacedataProcessServer.Maintainpb.Harddisk.Builder, FacedataProcessServer.Maintainpb.HarddiskOrBuilder> harddiskBuilder_;
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public boolean hasHarddisk() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Harddisk getHarddisk() {
        if (harddiskBuilder_ == null) {
          return harddisk_;
        } else {
          return harddiskBuilder_.getMessage();
        }
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public Builder setHarddisk(FacedataProcessServer.Maintainpb.Harddisk value) {
        if (harddiskBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          harddisk_ = value;
          onChanged();
        } else {
          harddiskBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public Builder setHarddisk(
          FacedataProcessServer.Maintainpb.Harddisk.Builder builderForValue) {
        if (harddiskBuilder_ == null) {
          harddisk_ = builderForValue.build();
          onChanged();
        } else {
          harddiskBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public Builder mergeHarddisk(FacedataProcessServer.Maintainpb.Harddisk value) {
        if (harddiskBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              harddisk_ != FacedataProcessServer.Maintainpb.Harddisk.getDefaultInstance()) {
            harddisk_ =
              FacedataProcessServer.Maintainpb.Harddisk.newBuilder(harddisk_).mergeFrom(value).buildPartial();
          } else {
            harddisk_ = value;
          }
          onChanged();
        } else {
          harddiskBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public Builder clearHarddisk() {
        if (harddiskBuilder_ == null) {
          harddisk_ = FacedataProcessServer.Maintainpb.Harddisk.getDefaultInstance();
          onChanged();
        } else {
          harddiskBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Harddisk.Builder getHarddiskBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getHarddiskFieldBuilder().getBuilder();
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.HarddiskOrBuilder getHarddiskOrBuilder() {
        if (harddiskBuilder_ != null) {
          return harddiskBuilder_.getMessageOrBuilder();
        } else {
          return harddisk_;
        }
      }
      /**
       * <code>required .maintainpb.Harddisk harddisk = 2;</code>
       *
       * <pre>
       * 硬盘状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Harddisk, FacedataProcessServer.Maintainpb.Harddisk.Builder, FacedataProcessServer.Maintainpb.HarddiskOrBuilder> 
          getHarddiskFieldBuilder() {
        if (harddiskBuilder_ == null) {
          harddiskBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.Harddisk, FacedataProcessServer.Maintainpb.Harddisk.Builder, FacedataProcessServer.Maintainpb.HarddiskOrBuilder>(
                  getHarddisk(),
                  getParentForChildren(),
                  isClean());
          harddisk_ = null;
        }
        return harddiskBuilder_;
      }

      private FacedataProcessServer.Maintainpb.Memory memory_ = FacedataProcessServer.Maintainpb.Memory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Memory, FacedataProcessServer.Maintainpb.Memory.Builder, FacedataProcessServer.Maintainpb.MemoryOrBuilder> memoryBuilder_;
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public boolean hasMemory() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Memory getMemory() {
        if (memoryBuilder_ == null) {
          return memory_;
        } else {
          return memoryBuilder_.getMessage();
        }
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public Builder setMemory(FacedataProcessServer.Maintainpb.Memory value) {
        if (memoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          memory_ = value;
          onChanged();
        } else {
          memoryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public Builder setMemory(
          FacedataProcessServer.Maintainpb.Memory.Builder builderForValue) {
        if (memoryBuilder_ == null) {
          memory_ = builderForValue.build();
          onChanged();
        } else {
          memoryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public Builder mergeMemory(FacedataProcessServer.Maintainpb.Memory value) {
        if (memoryBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              memory_ != FacedataProcessServer.Maintainpb.Memory.getDefaultInstance()) {
            memory_ =
              FacedataProcessServer.Maintainpb.Memory.newBuilder(memory_).mergeFrom(value).buildPartial();
          } else {
            memory_ = value;
          }
          onChanged();
        } else {
          memoryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public Builder clearMemory() {
        if (memoryBuilder_ == null) {
          memory_ = FacedataProcessServer.Maintainpb.Memory.getDefaultInstance();
          onChanged();
        } else {
          memoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Memory.Builder getMemoryBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getMemoryFieldBuilder().getBuilder();
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.MemoryOrBuilder getMemoryOrBuilder() {
        if (memoryBuilder_ != null) {
          return memoryBuilder_.getMessageOrBuilder();
        } else {
          return memory_;
        }
      }
      /**
       * <code>required .maintainpb.Memory memory = 3;</code>
       *
       * <pre>
       * 内存状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Memory, FacedataProcessServer.Maintainpb.Memory.Builder, FacedataProcessServer.Maintainpb.MemoryOrBuilder> 
          getMemoryFieldBuilder() {
        if (memoryBuilder_ == null) {
          memoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.Memory, FacedataProcessServer.Maintainpb.Memory.Builder, FacedataProcessServer.Maintainpb.MemoryOrBuilder>(
                  getMemory(),
                  getParentForChildren(),
                  isClean());
          memory_ = null;
        }
        return memoryBuilder_;
      }

      private FacedataProcessServer.Maintainpb.Network network_ = FacedataProcessServer.Maintainpb.Network.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Network, FacedataProcessServer.Maintainpb.Network.Builder, FacedataProcessServer.Maintainpb.NetworkOrBuilder> networkBuilder_;
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public boolean hasNetwork() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Network getNetwork() {
        if (networkBuilder_ == null) {
          return network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public Builder setNetwork(FacedataProcessServer.Maintainpb.Network value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public Builder setNetwork(
          FacedataProcessServer.Maintainpb.Network.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public Builder mergeNetwork(FacedataProcessServer.Maintainpb.Network value) {
        if (networkBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              network_ != FacedataProcessServer.Maintainpb.Network.getDefaultInstance()) {
            network_ =
              FacedataProcessServer.Maintainpb.Network.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = FacedataProcessServer.Maintainpb.Network.getDefaultInstance();
          onChanged();
        } else {
          networkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Network.Builder getNetworkBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.NetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_;
        }
      }
      /**
       * <code>required .maintainpb.Network network = 4;</code>
       *
       * <pre>
       * 网卡状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Network, FacedataProcessServer.Maintainpb.Network.Builder, FacedataProcessServer.Maintainpb.NetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.Network, FacedataProcessServer.Maintainpb.Network.Builder, FacedataProcessServer.Maintainpb.NetworkOrBuilder>(
                  getNetwork(),
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }

      private FacedataProcessServer.Maintainpb.SysPara sysPara_ = FacedataProcessServer.Maintainpb.SysPara.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.SysPara, FacedataProcessServer.Maintainpb.SysPara.Builder, FacedataProcessServer.Maintainpb.SysParaOrBuilder> sysParaBuilder_;
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public boolean hasSysPara() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.SysPara getSysPara() {
        if (sysParaBuilder_ == null) {
          return sysPara_;
        } else {
          return sysParaBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public Builder setSysPara(FacedataProcessServer.Maintainpb.SysPara value) {
        if (sysParaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sysPara_ = value;
          onChanged();
        } else {
          sysParaBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public Builder setSysPara(
          FacedataProcessServer.Maintainpb.SysPara.Builder builderForValue) {
        if (sysParaBuilder_ == null) {
          sysPara_ = builderForValue.build();
          onChanged();
        } else {
          sysParaBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public Builder mergeSysPara(FacedataProcessServer.Maintainpb.SysPara value) {
        if (sysParaBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              sysPara_ != FacedataProcessServer.Maintainpb.SysPara.getDefaultInstance()) {
            sysPara_ =
              FacedataProcessServer.Maintainpb.SysPara.newBuilder(sysPara_).mergeFrom(value).buildPartial();
          } else {
            sysPara_ = value;
          }
          onChanged();
        } else {
          sysParaBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public Builder clearSysPara() {
        if (sysParaBuilder_ == null) {
          sysPara_ = FacedataProcessServer.Maintainpb.SysPara.getDefaultInstance();
          onChanged();
        } else {
          sysParaBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.SysPara.Builder getSysParaBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSysParaFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.SysParaOrBuilder getSysParaOrBuilder() {
        if (sysParaBuilder_ != null) {
          return sysParaBuilder_.getMessageOrBuilder();
        } else {
          return sysPara_;
        }
      }
      /**
       * <code>optional .maintainpb.SysPara sys_para = 5;</code>
       *
       * <pre>
       * 系统参数
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.SysPara, FacedataProcessServer.Maintainpb.SysPara.Builder, FacedataProcessServer.Maintainpb.SysParaOrBuilder> 
          getSysParaFieldBuilder() {
        if (sysParaBuilder_ == null) {
          sysParaBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.SysPara, FacedataProcessServer.Maintainpb.SysPara.Builder, FacedataProcessServer.Maintainpb.SysParaOrBuilder>(
                  getSysPara(),
                  getParentForChildren(),
                  isClean());
          sysPara_ = null;
        }
        return sysParaBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.DeviceStatus)
    }

    static {
      defaultInstance = new DeviceStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.DeviceStatus)
  }

  public interface DevServerStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.DevServerStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    java.util.List<FacedataProcessServer.Maintainpb.ProcessStatus> 
        getProcessList();
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.ProcessStatus getProcess(int index);
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    int getProcessCount();
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    java.util.List<? extends FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder> 
        getProcessOrBuilderList();
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder getProcessOrBuilder(
        int index);

    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    java.util.List<FacedataProcessServer.Maintainpb.ServiceStatus> 
        getServiceList();
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.ServiceStatus getService(int index);
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    int getServiceCount();
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    java.util.List<? extends FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder> 
        getServiceOrBuilderList();
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder getServiceOrBuilder(
        int index);

    /**
     * <code>required .maintainpb.DeviceStatus device = 4;</code>
     *
     * <pre>
     * 设备状态
     * </pre>
     */
    boolean hasDevice();
    /**
     * <code>required .maintainpb.DeviceStatus device = 4;</code>
     *
     * <pre>
     * 设备状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.DeviceStatus getDevice();
    /**
     * <code>required .maintainpb.DeviceStatus device = 4;</code>
     *
     * <pre>
     * 设备状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.DeviceStatusOrBuilder getDeviceOrBuilder();
  }
  /**
   * Protobuf type {@code maintainpb.DevServerStatus}
   *
   * <pre>
   * 服务器设备状态
   * </pre>
   */
  public static final class DevServerStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.DevServerStatus)
      DevServerStatusOrBuilder {
    // Use DevServerStatus.newBuilder() to construct.
    private DevServerStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DevServerStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DevServerStatus defaultInstance;
    public static DevServerStatus getDefaultInstance() {
      return defaultInstance;
    }

    public DevServerStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DevServerStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                process_ = new java.util.ArrayList<FacedataProcessServer.Maintainpb.ProcessStatus>();
                mutable_bitField0_ |= 0x00000002;
              }
              process_.add(input.readMessage(FacedataProcessServer.Maintainpb.ProcessStatus.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                service_ = new java.util.ArrayList<FacedataProcessServer.Maintainpb.ServiceStatus>();
                mutable_bitField0_ |= 0x00000004;
              }
              service_.add(input.readMessage(FacedataProcessServer.Maintainpb.ServiceStatus.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              FacedataProcessServer.Maintainpb.DeviceStatus.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = device_.toBuilder();
              }
              device_ = input.readMessage(FacedataProcessServer.Maintainpb.DeviceStatus.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(device_);
                device_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          process_ = java.util.Collections.unmodifiableList(process_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          service_ = java.util.Collections.unmodifiableList(service_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.DevServerStatus.class, FacedataProcessServer.Maintainpb.DevServerStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<DevServerStatus> PARSER =
        new com.google.protobuf.AbstractParser<DevServerStatus>() {
      public DevServerStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DevServerStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DevServerStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     *
     * <pre>
     * 设备名称
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROCESS_FIELD_NUMBER = 2;
    private java.util.List<FacedataProcessServer.Maintainpb.ProcessStatus> process_;
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    public java.util.List<FacedataProcessServer.Maintainpb.ProcessStatus> getProcessList() {
      return process_;
    }
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    public java.util.List<? extends FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder> 
        getProcessOrBuilderList() {
      return process_;
    }
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    public int getProcessCount() {
      return process_.size();
    }
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.ProcessStatus getProcess(int index) {
      return process_.get(index);
    }
    /**
     * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
     *
     * <pre>
     * 进程状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder getProcessOrBuilder(
        int index) {
      return process_.get(index);
    }

    public static final int SERVICE_FIELD_NUMBER = 3;
    private java.util.List<FacedataProcessServer.Maintainpb.ServiceStatus> service_;
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    public java.util.List<FacedataProcessServer.Maintainpb.ServiceStatus> getServiceList() {
      return service_;
    }
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    public java.util.List<? extends FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder> 
        getServiceOrBuilderList() {
      return service_;
    }
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    public int getServiceCount() {
      return service_.size();
    }
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.ServiceStatus getService(int index) {
      return service_.get(index);
    }
    /**
     * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
     *
     * <pre>
     * 服务状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder getServiceOrBuilder(
        int index) {
      return service_.get(index);
    }

    public static final int DEVICE_FIELD_NUMBER = 4;
    private FacedataProcessServer.Maintainpb.DeviceStatus device_;
    /**
     * <code>required .maintainpb.DeviceStatus device = 4;</code>
     *
     * <pre>
     * 设备状态
     * </pre>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .maintainpb.DeviceStatus device = 4;</code>
     *
     * <pre>
     * 设备状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.DeviceStatus getDevice() {
      return device_;
    }
    /**
     * <code>required .maintainpb.DeviceStatus device = 4;</code>
     *
     * <pre>
     * 设备状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.DeviceStatusOrBuilder getDeviceOrBuilder() {
      return device_;
    }

    private void initFields() {
      name_ = "";
      process_ = java.util.Collections.emptyList();
      service_ = java.util.Collections.emptyList();
      device_ = FacedataProcessServer.Maintainpb.DeviceStatus.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDevice()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getProcessCount(); i++) {
        if (!getProcess(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getServiceCount(); i++) {
        if (!getService(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getDevice().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      for (int i = 0; i < process_.size(); i++) {
        output.writeMessage(2, process_.get(i));
      }
      for (int i = 0; i < service_.size(); i++) {
        output.writeMessage(3, service_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, device_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      for (int i = 0; i < process_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, process_.get(i));
      }
      for (int i = 0; i < service_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, service_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, device_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DevServerStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.DevServerStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.DevServerStatus}
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.DevServerStatus)
        FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.DevServerStatus.class, FacedataProcessServer.Maintainpb.DevServerStatus.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.DevServerStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProcessFieldBuilder();
          getServiceFieldBuilder();
          getDeviceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (processBuilder_ == null) {
          process_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          processBuilder_.clear();
        }
        if (serviceBuilder_ == null) {
          service_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          serviceBuilder_.clear();
        }
        if (deviceBuilder_ == null) {
          device_ = FacedataProcessServer.Maintainpb.DeviceStatus.getDefaultInstance();
        } else {
          deviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerStatus_descriptor;
      }

      public FacedataProcessServer.Maintainpb.DevServerStatus getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.DevServerStatus.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.DevServerStatus build() {
        FacedataProcessServer.Maintainpb.DevServerStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.DevServerStatus buildPartial() {
        FacedataProcessServer.Maintainpb.DevServerStatus result = new FacedataProcessServer.Maintainpb.DevServerStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (processBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            process_ = java.util.Collections.unmodifiableList(process_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.process_ = process_;
        } else {
          result.process_ = processBuilder_.build();
        }
        if (serviceBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            service_ = java.util.Collections.unmodifiableList(service_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.service_ = service_;
        } else {
          result.service_ = serviceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        if (deviceBuilder_ == null) {
          result.device_ = device_;
        } else {
          result.device_ = deviceBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.DevServerStatus) {
          return mergeFrom((FacedataProcessServer.Maintainpb.DevServerStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.DevServerStatus other) {
        if (other == FacedataProcessServer.Maintainpb.DevServerStatus.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (processBuilder_ == null) {
          if (!other.process_.isEmpty()) {
            if (process_.isEmpty()) {
              process_ = other.process_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureProcessIsMutable();
              process_.addAll(other.process_);
            }
            onChanged();
          }
        } else {
          if (!other.process_.isEmpty()) {
            if (processBuilder_.isEmpty()) {
              processBuilder_.dispose();
              processBuilder_ = null;
              process_ = other.process_;
              bitField0_ = (bitField0_ & ~0x00000002);
              processBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getProcessFieldBuilder() : null;
            } else {
              processBuilder_.addAllMessages(other.process_);
            }
          }
        }
        if (serviceBuilder_ == null) {
          if (!other.service_.isEmpty()) {
            if (service_.isEmpty()) {
              service_ = other.service_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureServiceIsMutable();
              service_.addAll(other.service_);
            }
            onChanged();
          }
        } else {
          if (!other.service_.isEmpty()) {
            if (serviceBuilder_.isEmpty()) {
              serviceBuilder_.dispose();
              serviceBuilder_ = null;
              service_ = other.service_;
              bitField0_ = (bitField0_ & ~0x00000004);
              serviceBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getServiceFieldBuilder() : null;
            } else {
              serviceBuilder_.addAllMessages(other.service_);
            }
          }
        }
        if (other.hasDevice()) {
          mergeDevice(other.getDevice());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasDevice()) {
          
          return false;
        }
        for (int i = 0; i < getProcessCount(); i++) {
          if (!getProcess(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getServiceCount(); i++) {
          if (!getService(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getDevice().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.DevServerStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.DevServerStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       *
       * <pre>
       * 设备名称
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<FacedataProcessServer.Maintainpb.ProcessStatus> process_ =
        java.util.Collections.emptyList();
      private void ensureProcessIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          process_ = new java.util.ArrayList<FacedataProcessServer.Maintainpb.ProcessStatus>(process_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          FacedataProcessServer.Maintainpb.ProcessStatus, FacedataProcessServer.Maintainpb.ProcessStatus.Builder, FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder> processBuilder_;

      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public java.util.List<FacedataProcessServer.Maintainpb.ProcessStatus> getProcessList() {
        if (processBuilder_ == null) {
          return java.util.Collections.unmodifiableList(process_);
        } else {
          return processBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public int getProcessCount() {
        if (processBuilder_ == null) {
          return process_.size();
        } else {
          return processBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ProcessStatus getProcess(int index) {
        if (processBuilder_ == null) {
          return process_.get(index);
        } else {
          return processBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder setProcess(
          int index, FacedataProcessServer.Maintainpb.ProcessStatus value) {
        if (processBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessIsMutable();
          process_.set(index, value);
          onChanged();
        } else {
          processBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder setProcess(
          int index, FacedataProcessServer.Maintainpb.ProcessStatus.Builder builderForValue) {
        if (processBuilder_ == null) {
          ensureProcessIsMutable();
          process_.set(index, builderForValue.build());
          onChanged();
        } else {
          processBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder addProcess(FacedataProcessServer.Maintainpb.ProcessStatus value) {
        if (processBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessIsMutable();
          process_.add(value);
          onChanged();
        } else {
          processBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder addProcess(
          int index, FacedataProcessServer.Maintainpb.ProcessStatus value) {
        if (processBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessIsMutable();
          process_.add(index, value);
          onChanged();
        } else {
          processBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder addProcess(
          FacedataProcessServer.Maintainpb.ProcessStatus.Builder builderForValue) {
        if (processBuilder_ == null) {
          ensureProcessIsMutable();
          process_.add(builderForValue.build());
          onChanged();
        } else {
          processBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder addProcess(
          int index, FacedataProcessServer.Maintainpb.ProcessStatus.Builder builderForValue) {
        if (processBuilder_ == null) {
          ensureProcessIsMutable();
          process_.add(index, builderForValue.build());
          onChanged();
        } else {
          processBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder addAllProcess(
          java.lang.Iterable<? extends FacedataProcessServer.Maintainpb.ProcessStatus> values) {
        if (processBuilder_ == null) {
          ensureProcessIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, process_);
          onChanged();
        } else {
          processBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder clearProcess() {
        if (processBuilder_ == null) {
          process_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          processBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public Builder removeProcess(int index) {
        if (processBuilder_ == null) {
          ensureProcessIsMutable();
          process_.remove(index);
          onChanged();
        } else {
          processBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ProcessStatus.Builder getProcessBuilder(
          int index) {
        return getProcessFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder getProcessOrBuilder(
          int index) {
        if (processBuilder_ == null) {
          return process_.get(index);  } else {
          return processBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public java.util.List<? extends FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder> 
           getProcessOrBuilderList() {
        if (processBuilder_ != null) {
          return processBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(process_);
        }
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ProcessStatus.Builder addProcessBuilder() {
        return getProcessFieldBuilder().addBuilder(
            FacedataProcessServer.Maintainpb.ProcessStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ProcessStatus.Builder addProcessBuilder(
          int index) {
        return getProcessFieldBuilder().addBuilder(
            index, FacedataProcessServer.Maintainpb.ProcessStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maintainpb.ProcessStatus process = 2;</code>
       *
       * <pre>
       * 进程状态
       * </pre>
       */
      public java.util.List<FacedataProcessServer.Maintainpb.ProcessStatus.Builder> 
           getProcessBuilderList() {
        return getProcessFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          FacedataProcessServer.Maintainpb.ProcessStatus, FacedataProcessServer.Maintainpb.ProcessStatus.Builder, FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder> 
          getProcessFieldBuilder() {
        if (processBuilder_ == null) {
          processBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              FacedataProcessServer.Maintainpb.ProcessStatus, FacedataProcessServer.Maintainpb.ProcessStatus.Builder, FacedataProcessServer.Maintainpb.ProcessStatusOrBuilder>(
                  process_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          process_ = null;
        }
        return processBuilder_;
      }

      private java.util.List<FacedataProcessServer.Maintainpb.ServiceStatus> service_ =
        java.util.Collections.emptyList();
      private void ensureServiceIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          service_ = new java.util.ArrayList<FacedataProcessServer.Maintainpb.ServiceStatus>(service_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          FacedataProcessServer.Maintainpb.ServiceStatus, FacedataProcessServer.Maintainpb.ServiceStatus.Builder, FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder> serviceBuilder_;

      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public java.util.List<FacedataProcessServer.Maintainpb.ServiceStatus> getServiceList() {
        if (serviceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(service_);
        } else {
          return serviceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public int getServiceCount() {
        if (serviceBuilder_ == null) {
          return service_.size();
        } else {
          return serviceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ServiceStatus getService(int index) {
        if (serviceBuilder_ == null) {
          return service_.get(index);
        } else {
          return serviceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder setService(
          int index, FacedataProcessServer.Maintainpb.ServiceStatus value) {
        if (serviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServiceIsMutable();
          service_.set(index, value);
          onChanged();
        } else {
          serviceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder setService(
          int index, FacedataProcessServer.Maintainpb.ServiceStatus.Builder builderForValue) {
        if (serviceBuilder_ == null) {
          ensureServiceIsMutable();
          service_.set(index, builderForValue.build());
          onChanged();
        } else {
          serviceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder addService(FacedataProcessServer.Maintainpb.ServiceStatus value) {
        if (serviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServiceIsMutable();
          service_.add(value);
          onChanged();
        } else {
          serviceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder addService(
          int index, FacedataProcessServer.Maintainpb.ServiceStatus value) {
        if (serviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServiceIsMutable();
          service_.add(index, value);
          onChanged();
        } else {
          serviceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder addService(
          FacedataProcessServer.Maintainpb.ServiceStatus.Builder builderForValue) {
        if (serviceBuilder_ == null) {
          ensureServiceIsMutable();
          service_.add(builderForValue.build());
          onChanged();
        } else {
          serviceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder addService(
          int index, FacedataProcessServer.Maintainpb.ServiceStatus.Builder builderForValue) {
        if (serviceBuilder_ == null) {
          ensureServiceIsMutable();
          service_.add(index, builderForValue.build());
          onChanged();
        } else {
          serviceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder addAllService(
          java.lang.Iterable<? extends FacedataProcessServer.Maintainpb.ServiceStatus> values) {
        if (serviceBuilder_ == null) {
          ensureServiceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, service_);
          onChanged();
        } else {
          serviceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder clearService() {
        if (serviceBuilder_ == null) {
          service_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          serviceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public Builder removeService(int index) {
        if (serviceBuilder_ == null) {
          ensureServiceIsMutable();
          service_.remove(index);
          onChanged();
        } else {
          serviceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ServiceStatus.Builder getServiceBuilder(
          int index) {
        return getServiceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder getServiceOrBuilder(
          int index) {
        if (serviceBuilder_ == null) {
          return service_.get(index);  } else {
          return serviceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public java.util.List<? extends FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder> 
           getServiceOrBuilderList() {
        if (serviceBuilder_ != null) {
          return serviceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(service_);
        }
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ServiceStatus.Builder addServiceBuilder() {
        return getServiceFieldBuilder().addBuilder(
            FacedataProcessServer.Maintainpb.ServiceStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.ServiceStatus.Builder addServiceBuilder(
          int index) {
        return getServiceFieldBuilder().addBuilder(
            index, FacedataProcessServer.Maintainpb.ServiceStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maintainpb.ServiceStatus service = 3;</code>
       *
       * <pre>
       * 服务状态
       * </pre>
       */
      public java.util.List<FacedataProcessServer.Maintainpb.ServiceStatus.Builder> 
           getServiceBuilderList() {
        return getServiceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          FacedataProcessServer.Maintainpb.ServiceStatus, FacedataProcessServer.Maintainpb.ServiceStatus.Builder, FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder> 
          getServiceFieldBuilder() {
        if (serviceBuilder_ == null) {
          serviceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              FacedataProcessServer.Maintainpb.ServiceStatus, FacedataProcessServer.Maintainpb.ServiceStatus.Builder, FacedataProcessServer.Maintainpb.ServiceStatusOrBuilder>(
                  service_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          service_ = null;
        }
        return serviceBuilder_;
      }

      private FacedataProcessServer.Maintainpb.DeviceStatus device_ = FacedataProcessServer.Maintainpb.DeviceStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.DeviceStatus, FacedataProcessServer.Maintainpb.DeviceStatus.Builder, FacedataProcessServer.Maintainpb.DeviceStatusOrBuilder> deviceBuilder_;
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DeviceStatus getDevice() {
        if (deviceBuilder_ == null) {
          return device_;
        } else {
          return deviceBuilder_.getMessage();
        }
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public Builder setDevice(FacedataProcessServer.Maintainpb.DeviceStatus value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          device_ = value;
          onChanged();
        } else {
          deviceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public Builder setDevice(
          FacedataProcessServer.Maintainpb.DeviceStatus.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          device_ = builderForValue.build();
          onChanged();
        } else {
          deviceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public Builder mergeDevice(FacedataProcessServer.Maintainpb.DeviceStatus value) {
        if (deviceBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              device_ != FacedataProcessServer.Maintainpb.DeviceStatus.getDefaultInstance()) {
            device_ =
              FacedataProcessServer.Maintainpb.DeviceStatus.newBuilder(device_).mergeFrom(value).buildPartial();
          } else {
            device_ = value;
          }
          onChanged();
        } else {
          deviceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public Builder clearDevice() {
        if (deviceBuilder_ == null) {
          device_ = FacedataProcessServer.Maintainpb.DeviceStatus.getDefaultInstance();
          onChanged();
        } else {
          deviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DeviceStatus.Builder getDeviceBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDeviceFieldBuilder().getBuilder();
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DeviceStatusOrBuilder getDeviceOrBuilder() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilder();
        } else {
          return device_;
        }
      }
      /**
       * <code>required .maintainpb.DeviceStatus device = 4;</code>
       *
       * <pre>
       * 设备状态
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.DeviceStatus, FacedataProcessServer.Maintainpb.DeviceStatus.Builder, FacedataProcessServer.Maintainpb.DeviceStatusOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.DeviceStatus, FacedataProcessServer.Maintainpb.DeviceStatus.Builder, FacedataProcessServer.Maintainpb.DeviceStatusOrBuilder>(
                  getDevice(),
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.DevServerStatus)
    }

    static {
      defaultInstance = new DevServerStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.DevServerStatus)
  }

  public interface DevServerMaintainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.DevServerMaintain)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     * 系统版本
     * </pre>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     * 系统版本
     * </pre>
     */
    java.lang.String getVersion();
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     * 系统版本
     * </pre>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    java.util.List<FacedataProcessServer.Maintainpb.DevServerStatus> 
        getStatusList();
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.DevServerStatus getStatus(int index);
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    int getStatusCount();
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    java.util.List<? extends FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder> 
        getStatusOrBuilderList();
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder getStatusOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code maintainpb.DevServerMaintain}
   *
   * <pre>
   * 服务器设备维护信息
   * </pre>
   */
  public static final class DevServerMaintain extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.DevServerMaintain)
      DevServerMaintainOrBuilder {
    // Use DevServerMaintain.newBuilder() to construct.
    private DevServerMaintain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DevServerMaintain(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DevServerMaintain defaultInstance;
    public static DevServerMaintain getDefaultInstance() {
      return defaultInstance;
    }

    public DevServerMaintain getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DevServerMaintain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              version_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                status_ = new java.util.ArrayList<FacedataProcessServer.Maintainpb.DevServerStatus>();
                mutable_bitField0_ |= 0x00000002;
              }
              status_.add(input.readMessage(FacedataProcessServer.Maintainpb.DevServerStatus.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          status_ = java.util.Collections.unmodifiableList(status_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerMaintain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerMaintain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.DevServerMaintain.class, FacedataProcessServer.Maintainpb.DevServerMaintain.Builder.class);
    }

    public static com.google.protobuf.Parser<DevServerMaintain> PARSER =
        new com.google.protobuf.AbstractParser<DevServerMaintain>() {
      public DevServerMaintain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DevServerMaintain(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DevServerMaintain> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private java.lang.Object version_;
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     * 系统版本
     * </pre>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     * 系统版本
     * </pre>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 1;</code>
     *
     * <pre>
     * 系统版本
     * </pre>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 2;
    private java.util.List<FacedataProcessServer.Maintainpb.DevServerStatus> status_;
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    public java.util.List<FacedataProcessServer.Maintainpb.DevServerStatus> getStatusList() {
      return status_;
    }
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    public java.util.List<? extends FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder> 
        getStatusOrBuilderList() {
      return status_;
    }
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    public int getStatusCount() {
      return status_.size();
    }
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.DevServerStatus getStatus(int index) {
      return status_.get(index);
    }
    /**
     * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
     *
     * <pre>
     * 服务器设备状态
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder getStatusOrBuilder(
        int index) {
      return status_.get(index);
    }

    private void initFields() {
      version_ = "";
      status_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getStatusCount(); i++) {
        if (!getStatus(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getVersionBytes());
      }
      for (int i = 0; i < status_.size(); i++) {
        output.writeMessage(2, status_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getVersionBytes());
      }
      for (int i = 0; i < status_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, status_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.DevServerMaintain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.DevServerMaintain prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.DevServerMaintain}
     *
     * <pre>
     * 服务器设备维护信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.DevServerMaintain)
        FacedataProcessServer.Maintainpb.DevServerMaintainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerMaintain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerMaintain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.DevServerMaintain.class, FacedataProcessServer.Maintainpb.DevServerMaintain.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.DevServerMaintain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (statusBuilder_ == null) {
          status_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          statusBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_DevServerMaintain_descriptor;
      }

      public FacedataProcessServer.Maintainpb.DevServerMaintain getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.DevServerMaintain.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.DevServerMaintain build() {
        FacedataProcessServer.Maintainpb.DevServerMaintain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.DevServerMaintain buildPartial() {
        FacedataProcessServer.Maintainpb.DevServerMaintain result = new FacedataProcessServer.Maintainpb.DevServerMaintain(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            status_ = java.util.Collections.unmodifiableList(status_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.DevServerMaintain) {
          return mergeFrom((FacedataProcessServer.Maintainpb.DevServerMaintain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.DevServerMaintain other) {
        if (other == FacedataProcessServer.Maintainpb.DevServerMaintain.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          bitField0_ |= 0x00000001;
          version_ = other.version_;
          onChanged();
        }
        if (statusBuilder_ == null) {
          if (!other.status_.isEmpty()) {
            if (status_.isEmpty()) {
              status_ = other.status_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureStatusIsMutable();
              status_.addAll(other.status_);
            }
            onChanged();
          }
        } else {
          if (!other.status_.isEmpty()) {
            if (statusBuilder_.isEmpty()) {
              statusBuilder_.dispose();
              statusBuilder_ = null;
              status_ = other.status_;
              bitField0_ = (bitField0_ & ~0x00000002);
              statusBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatusFieldBuilder() : null;
            } else {
              statusBuilder_.addAllMessages(other.status_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVersion()) {
          
          return false;
        }
        for (int i = 0; i < getStatusCount(); i++) {
          if (!getStatus(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.DevServerMaintain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.DevServerMaintain) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object version_ = "";
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       * 系统版本
       * </pre>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       * 系统版本
       * </pre>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       * 系统版本
       * </pre>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       * 系统版本
       * </pre>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       * 系统版本
       * </pre>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 1;</code>
       *
       * <pre>
       * 系统版本
       * </pre>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }

      private java.util.List<FacedataProcessServer.Maintainpb.DevServerStatus> status_ =
        java.util.Collections.emptyList();
      private void ensureStatusIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          status_ = new java.util.ArrayList<FacedataProcessServer.Maintainpb.DevServerStatus>(status_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          FacedataProcessServer.Maintainpb.DevServerStatus, FacedataProcessServer.Maintainpb.DevServerStatus.Builder, FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder> statusBuilder_;

      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public java.util.List<FacedataProcessServer.Maintainpb.DevServerStatus> getStatusList() {
        if (statusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(status_);
        } else {
          return statusBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public int getStatusCount() {
        if (statusBuilder_ == null) {
          return status_.size();
        } else {
          return statusBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DevServerStatus getStatus(int index) {
        if (statusBuilder_ == null) {
          return status_.get(index);
        } else {
          return statusBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder setStatus(
          int index, FacedataProcessServer.Maintainpb.DevServerStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatusIsMutable();
          status_.set(index, value);
          onChanged();
        } else {
          statusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder setStatus(
          int index, FacedataProcessServer.Maintainpb.DevServerStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.set(index, builderForValue.build());
          onChanged();
        } else {
          statusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder addStatus(FacedataProcessServer.Maintainpb.DevServerStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatusIsMutable();
          status_.add(value);
          onChanged();
        } else {
          statusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder addStatus(
          int index, FacedataProcessServer.Maintainpb.DevServerStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatusIsMutable();
          status_.add(index, value);
          onChanged();
        } else {
          statusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder addStatus(
          FacedataProcessServer.Maintainpb.DevServerStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.add(builderForValue.build());
          onChanged();
        } else {
          statusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder addStatus(
          int index, FacedataProcessServer.Maintainpb.DevServerStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.add(index, builderForValue.build());
          onChanged();
        } else {
          statusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder addAllStatus(
          java.lang.Iterable<? extends FacedataProcessServer.Maintainpb.DevServerStatus> values) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, status_);
          onChanged();
        } else {
          statusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public Builder removeStatus(int index) {
        if (statusBuilder_ == null) {
          ensureStatusIsMutable();
          status_.remove(index);
          onChanged();
        } else {
          statusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DevServerStatus.Builder getStatusBuilder(
          int index) {
        return getStatusFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder getStatusOrBuilder(
          int index) {
        if (statusBuilder_ == null) {
          return status_.get(index);  } else {
          return statusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public java.util.List<? extends FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder> 
           getStatusOrBuilderList() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(status_);
        }
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DevServerStatus.Builder addStatusBuilder() {
        return getStatusFieldBuilder().addBuilder(
            FacedataProcessServer.Maintainpb.DevServerStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.DevServerStatus.Builder addStatusBuilder(
          int index) {
        return getStatusFieldBuilder().addBuilder(
            index, FacedataProcessServer.Maintainpb.DevServerStatus.getDefaultInstance());
      }
      /**
       * <code>repeated .maintainpb.DevServerStatus status = 2;</code>
       *
       * <pre>
       * 服务器设备状态
       * </pre>
       */
      public java.util.List<FacedataProcessServer.Maintainpb.DevServerStatus.Builder> 
           getStatusBuilderList() {
        return getStatusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          FacedataProcessServer.Maintainpb.DevServerStatus, FacedataProcessServer.Maintainpb.DevServerStatus.Builder, FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              FacedataProcessServer.Maintainpb.DevServerStatus, FacedataProcessServer.Maintainpb.DevServerStatus.Builder, FacedataProcessServer.Maintainpb.DevServerStatusOrBuilder>(
                  status_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.DevServerMaintain)
    }

    static {
      defaultInstance = new DevServerMaintain(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.DevServerMaintain)
  }

  public interface PublishOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.Publish)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
     */
    boolean hasServerMaintain();
    /**
     * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
     */
    FacedataProcessServer.Maintainpb.DevServerMaintain getServerMaintain();
    /**
     * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
     */
    FacedataProcessServer.Maintainpb.DevServerMaintainOrBuilder getServerMaintainOrBuilder();
  }
  /**
   * Protobuf type {@code maintainpb.Publish}
   *
   * <pre>
   * 发布
   * </pre>
   */
  public static final class Publish extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.Publish)
      PublishOrBuilder {
    // Use Publish.newBuilder() to construct.
    private Publish(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Publish(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Publish defaultInstance;
    public static Publish getDefaultInstance() {
      return defaultInstance;
    }

    public Publish getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Publish(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              FacedataProcessServer.Maintainpb.DevServerMaintain.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = serverMaintain_.toBuilder();
              }
              serverMaintain_ = input.readMessage(FacedataProcessServer.Maintainpb.DevServerMaintain.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(serverMaintain_);
                serverMaintain_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Publish_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Publish_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.Publish.class, FacedataProcessServer.Maintainpb.Publish.Builder.class);
    }

    public static com.google.protobuf.Parser<Publish> PARSER =
        new com.google.protobuf.AbstractParser<Publish>() {
      public Publish parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Publish(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Publish> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SERVER_MAINTAIN_FIELD_NUMBER = 1;
    private FacedataProcessServer.Maintainpb.DevServerMaintain serverMaintain_;
    /**
     * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
     */
    public boolean hasServerMaintain() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
     */
    public FacedataProcessServer.Maintainpb.DevServerMaintain getServerMaintain() {
      return serverMaintain_;
    }
    /**
     * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
     */
    public FacedataProcessServer.Maintainpb.DevServerMaintainOrBuilder getServerMaintainOrBuilder() {
      return serverMaintain_;
    }

    private void initFields() {
      serverMaintain_ = FacedataProcessServer.Maintainpb.DevServerMaintain.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasServerMaintain()) {
        if (!getServerMaintain().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, serverMaintain_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, serverMaintain_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.Publish parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Publish parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.Publish prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.Publish}
     *
     * <pre>
     * 发布
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.Publish)
        FacedataProcessServer.Maintainpb.PublishOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Publish_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Publish_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.Publish.class, FacedataProcessServer.Maintainpb.Publish.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.Publish.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getServerMaintainFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (serverMaintainBuilder_ == null) {
          serverMaintain_ = FacedataProcessServer.Maintainpb.DevServerMaintain.getDefaultInstance();
        } else {
          serverMaintainBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Publish_descriptor;
      }

      public FacedataProcessServer.Maintainpb.Publish getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.Publish.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.Publish build() {
        FacedataProcessServer.Maintainpb.Publish result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.Publish buildPartial() {
        FacedataProcessServer.Maintainpb.Publish result = new FacedataProcessServer.Maintainpb.Publish(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (serverMaintainBuilder_ == null) {
          result.serverMaintain_ = serverMaintain_;
        } else {
          result.serverMaintain_ = serverMaintainBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.Publish) {
          return mergeFrom((FacedataProcessServer.Maintainpb.Publish)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.Publish other) {
        if (other == FacedataProcessServer.Maintainpb.Publish.getDefaultInstance()) return this;
        if (other.hasServerMaintain()) {
          mergeServerMaintain(other.getServerMaintain());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasServerMaintain()) {
          if (!getServerMaintain().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.Publish parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.Publish) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private FacedataProcessServer.Maintainpb.DevServerMaintain serverMaintain_ = FacedataProcessServer.Maintainpb.DevServerMaintain.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.DevServerMaintain, FacedataProcessServer.Maintainpb.DevServerMaintain.Builder, FacedataProcessServer.Maintainpb.DevServerMaintainOrBuilder> serverMaintainBuilder_;
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public boolean hasServerMaintain() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public FacedataProcessServer.Maintainpb.DevServerMaintain getServerMaintain() {
        if (serverMaintainBuilder_ == null) {
          return serverMaintain_;
        } else {
          return serverMaintainBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public Builder setServerMaintain(FacedataProcessServer.Maintainpb.DevServerMaintain value) {
        if (serverMaintainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          serverMaintain_ = value;
          onChanged();
        } else {
          serverMaintainBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public Builder setServerMaintain(
          FacedataProcessServer.Maintainpb.DevServerMaintain.Builder builderForValue) {
        if (serverMaintainBuilder_ == null) {
          serverMaintain_ = builderForValue.build();
          onChanged();
        } else {
          serverMaintainBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public Builder mergeServerMaintain(FacedataProcessServer.Maintainpb.DevServerMaintain value) {
        if (serverMaintainBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              serverMaintain_ != FacedataProcessServer.Maintainpb.DevServerMaintain.getDefaultInstance()) {
            serverMaintain_ =
              FacedataProcessServer.Maintainpb.DevServerMaintain.newBuilder(serverMaintain_).mergeFrom(value).buildPartial();
          } else {
            serverMaintain_ = value;
          }
          onChanged();
        } else {
          serverMaintainBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public Builder clearServerMaintain() {
        if (serverMaintainBuilder_ == null) {
          serverMaintain_ = FacedataProcessServer.Maintainpb.DevServerMaintain.getDefaultInstance();
          onChanged();
        } else {
          serverMaintainBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public FacedataProcessServer.Maintainpb.DevServerMaintain.Builder getServerMaintainBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getServerMaintainFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      public FacedataProcessServer.Maintainpb.DevServerMaintainOrBuilder getServerMaintainOrBuilder() {
        if (serverMaintainBuilder_ != null) {
          return serverMaintainBuilder_.getMessageOrBuilder();
        } else {
          return serverMaintain_;
        }
      }
      /**
       * <code>optional .maintainpb.DevServerMaintain server_maintain = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.DevServerMaintain, FacedataProcessServer.Maintainpb.DevServerMaintain.Builder, FacedataProcessServer.Maintainpb.DevServerMaintainOrBuilder> 
          getServerMaintainFieldBuilder() {
        if (serverMaintainBuilder_ == null) {
          serverMaintainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.DevServerMaintain, FacedataProcessServer.Maintainpb.DevServerMaintain.Builder, FacedataProcessServer.Maintainpb.DevServerMaintainOrBuilder>(
                  getServerMaintain(),
                  getParentForChildren(),
                  isClean());
          serverMaintain_ = null;
        }
        return serverMaintainBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.Publish)
    }

    static {
      defaultInstance = new Publish(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.Publish)
  }

  public interface MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:maintainpb.Message)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .maintainpb.MessageType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .maintainpb.MessageType type = 1;</code>
     */
    FacedataProcessServer.Maintainpb.MessageType getType();

    /**
     * <code>optional .maintainpb.Publish publish = 4;</code>
     *
     * <pre>
     *	optional Request			request			= 2;
     *	optional Response			response		= 3;
     * </pre>
     */
    boolean hasPublish();
    /**
     * <code>optional .maintainpb.Publish publish = 4;</code>
     *
     * <pre>
     *	optional Request			request			= 2;
     *	optional Response			response		= 3;
     * </pre>
     */
    FacedataProcessServer.Maintainpb.Publish getPublish();
    /**
     * <code>optional .maintainpb.Publish publish = 4;</code>
     *
     * <pre>
     *	optional Request			request			= 2;
     *	optional Response			response		= 3;
     * </pre>
     */
    FacedataProcessServer.Maintainpb.PublishOrBuilder getPublishOrBuilder();
  }
  /**
   * Protobuf type {@code maintainpb.Message}
   */
  public static final class Message extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:maintainpb.Message)
      MessageOrBuilder {
    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Message(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Message defaultInstance;
    public static Message getDefaultInstance() {
      return defaultInstance;
    }

    public Message getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              FacedataProcessServer.Maintainpb.MessageType value = FacedataProcessServer.Maintainpb.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 34: {
              FacedataProcessServer.Maintainpb.Publish.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = publish_.toBuilder();
              }
              publish_ = input.readMessage(FacedataProcessServer.Maintainpb.Publish.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(publish_);
                publish_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FacedataProcessServer.Maintainpb.Message.class, FacedataProcessServer.Maintainpb.Message.Builder.class);
    }

    public static com.google.protobuf.Parser<Message> PARSER =
        new com.google.protobuf.AbstractParser<Message>() {
      public Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Message(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private FacedataProcessServer.Maintainpb.MessageType type_;
    /**
     * <code>required .maintainpb.MessageType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .maintainpb.MessageType type = 1;</code>
     */
    public FacedataProcessServer.Maintainpb.MessageType getType() {
      return type_;
    }

    public static final int PUBLISH_FIELD_NUMBER = 4;
    private FacedataProcessServer.Maintainpb.Publish publish_;
    /**
     * <code>optional .maintainpb.Publish publish = 4;</code>
     *
     * <pre>
     *	optional Request			request			= 2;
     *	optional Response			response		= 3;
     * </pre>
     */
    public boolean hasPublish() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .maintainpb.Publish publish = 4;</code>
     *
     * <pre>
     *	optional Request			request			= 2;
     *	optional Response			response		= 3;
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.Publish getPublish() {
      return publish_;
    }
    /**
     * <code>optional .maintainpb.Publish publish = 4;</code>
     *
     * <pre>
     *	optional Request			request			= 2;
     *	optional Response			response		= 3;
     * </pre>
     */
    public FacedataProcessServer.Maintainpb.PublishOrBuilder getPublishOrBuilder() {
      return publish_;
    }

    private void initFields() {
      type_ = FacedataProcessServer.Maintainpb.MessageType.MsgDevServerStatus;
      publish_ = FacedataProcessServer.Maintainpb.Publish.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPublish()) {
        if (!getPublish().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, publish_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, publish_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static FacedataProcessServer.Maintainpb.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FacedataProcessServer.Maintainpb.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static FacedataProcessServer.Maintainpb.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static FacedataProcessServer.Maintainpb.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FacedataProcessServer.Maintainpb.Message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code maintainpb.Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:maintainpb.Message)
        FacedataProcessServer.Maintainpb.MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FacedataProcessServer.Maintainpb.Message.class, FacedataProcessServer.Maintainpb.Message.Builder.class);
      }

      // Construct using FacedataProcessServer.Maintainpb.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPublishFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = FacedataProcessServer.Maintainpb.MessageType.MsgDevServerStatus;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (publishBuilder_ == null) {
          publish_ = FacedataProcessServer.Maintainpb.Publish.getDefaultInstance();
        } else {
          publishBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FacedataProcessServer.Maintainpb.internal_static_maintainpb_Message_descriptor;
      }

      public FacedataProcessServer.Maintainpb.Message getDefaultInstanceForType() {
        return FacedataProcessServer.Maintainpb.Message.getDefaultInstance();
      }

      public FacedataProcessServer.Maintainpb.Message build() {
        FacedataProcessServer.Maintainpb.Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public FacedataProcessServer.Maintainpb.Message buildPartial() {
        FacedataProcessServer.Maintainpb.Message result = new FacedataProcessServer.Maintainpb.Message(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (publishBuilder_ == null) {
          result.publish_ = publish_;
        } else {
          result.publish_ = publishBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FacedataProcessServer.Maintainpb.Message) {
          return mergeFrom((FacedataProcessServer.Maintainpb.Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FacedataProcessServer.Maintainpb.Message other) {
        if (other == FacedataProcessServer.Maintainpb.Message.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPublish()) {
          mergePublish(other.getPublish());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasPublish()) {
          if (!getPublish().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        FacedataProcessServer.Maintainpb.Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (FacedataProcessServer.Maintainpb.Message) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private FacedataProcessServer.Maintainpb.MessageType type_ = FacedataProcessServer.Maintainpb.MessageType.MsgDevServerStatus;
      /**
       * <code>required .maintainpb.MessageType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .maintainpb.MessageType type = 1;</code>
       */
      public FacedataProcessServer.Maintainpb.MessageType getType() {
        return type_;
      }
      /**
       * <code>required .maintainpb.MessageType type = 1;</code>
       */
      public Builder setType(FacedataProcessServer.Maintainpb.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .maintainpb.MessageType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = FacedataProcessServer.Maintainpb.MessageType.MsgDevServerStatus;
        onChanged();
        return this;
      }

      private FacedataProcessServer.Maintainpb.Publish publish_ = FacedataProcessServer.Maintainpb.Publish.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Publish, FacedataProcessServer.Maintainpb.Publish.Builder, FacedataProcessServer.Maintainpb.PublishOrBuilder> publishBuilder_;
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public boolean hasPublish() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Publish getPublish() {
        if (publishBuilder_ == null) {
          return publish_;
        } else {
          return publishBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public Builder setPublish(FacedataProcessServer.Maintainpb.Publish value) {
        if (publishBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publish_ = value;
          onChanged();
        } else {
          publishBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public Builder setPublish(
          FacedataProcessServer.Maintainpb.Publish.Builder builderForValue) {
        if (publishBuilder_ == null) {
          publish_ = builderForValue.build();
          onChanged();
        } else {
          publishBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public Builder mergePublish(FacedataProcessServer.Maintainpb.Publish value) {
        if (publishBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              publish_ != FacedataProcessServer.Maintainpb.Publish.getDefaultInstance()) {
            publish_ =
              FacedataProcessServer.Maintainpb.Publish.newBuilder(publish_).mergeFrom(value).buildPartial();
          } else {
            publish_ = value;
          }
          onChanged();
        } else {
          publishBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public Builder clearPublish() {
        if (publishBuilder_ == null) {
          publish_ = FacedataProcessServer.Maintainpb.Publish.getDefaultInstance();
          onChanged();
        } else {
          publishBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.Publish.Builder getPublishBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPublishFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      public FacedataProcessServer.Maintainpb.PublishOrBuilder getPublishOrBuilder() {
        if (publishBuilder_ != null) {
          return publishBuilder_.getMessageOrBuilder();
        } else {
          return publish_;
        }
      }
      /**
       * <code>optional .maintainpb.Publish publish = 4;</code>
       *
       * <pre>
       *	optional Request			request			= 2;
       *	optional Response			response		= 3;
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FacedataProcessServer.Maintainpb.Publish, FacedataProcessServer.Maintainpb.Publish.Builder, FacedataProcessServer.Maintainpb.PublishOrBuilder> 
          getPublishFieldBuilder() {
        if (publishBuilder_ == null) {
          publishBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FacedataProcessServer.Maintainpb.Publish, FacedataProcessServer.Maintainpb.Publish.Builder, FacedataProcessServer.Maintainpb.PublishOrBuilder>(
                  getPublish(),
                  getParentForChildren(),
                  isClean());
          publish_ = null;
        }
        return publishBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:maintainpb.Message)
    }

    static {
      defaultInstance = new Message(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:maintainpb.Message)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_ProcessStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_ProcessStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_FdfsStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_FdfsStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_MySqlStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_MySqlStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_ServiceStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_ServiceStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_CPU_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_CPU_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_Harddisk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_Harddisk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_Memory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_Memory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_Network_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_Network_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_SysPara_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_SysPara_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_DeviceStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_DeviceStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_DevServerStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_DevServerStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_DevServerMaintain_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_DevServerMaintain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_Publish_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_Publish_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_maintainpb_Message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_maintainpb_Message_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016maintain.proto\022\nmaintainpb\"c\n\rProcessS" +
      "tatus\022\014\n\004name\030\001 \002(\t\022\017\n\007version\030\002 \002(\t\022\022\n\n" +
      "start_time\030\003 \002(\003\022\017\n\007runtime\030\004 \002(\003\022\016\n\006sta" +
      "tus\030\005 \002(\005\"L\n\nFdfsStatus\022\r\n\005group\030\001 \002(\t\022\r" +
      "\n\005total\030\002 \002(\005\022\014\n\004free\030\003 \002(\005\022\022\n\ntrunk_fre" +
      "e\030\004 \002(\005\"p\n\013MySqlStatus\022\022\n\nconnection\030\001 \002" +
      "(\005\022\017\n\007traffic\030\002 \002(\002\022\016\n\006select\030\003 \002(\005\022\r\n\005u" +
      "sage\030\004 \002(\002\022\r\n\005reads\030\005 \002(\005\022\016\n\006writes\030\006 \002(" +
      "\005\"\277\001\n\rServiceStatus\022\014\n\004name\030\001 \002(\t\022\017\n\007ver" +
      "sion\030\002 \002(\t\022\014\n\004time\030\003 \002(\003\022\022\n\nstart_time\030\004",
      " \002(\003\022\017\n\007runtime\030\005 \002(\003\022\016\n\006status\030\006 \002(\005\022$\n" +
      "\004fdfs\030\007 \001(\0132\026.maintainpb.FdfsStatus\022&\n\005m" +
      "ysql\030\010 \001(\0132\027.maintainpb.MySqlStatus\"!\n\003C" +
      "PU\022\014\n\004load\030\001 \002(\002\022\014\n\004time\030\002 \002(\004\"&\n\010Harddi" +
      "sk\022\014\n\004used\030\001 \002(\002\022\014\n\004free\030\002 \002(\002\"7\n\006Memory" +
      "\022\014\n\004used\030\001 \002(\002\022\021\n\tavailable\030\002 \002(\002\022\014\n\004fre" +
      "e\030\003 \002(\002\"%\n\007Network\022\014\n\004load\030\001 \002(\r\022\014\n\004time" +
      "\030\002 \002(\004\"s\n\007SysPara\022\013\n\003cpu\030\001 \002(\t\022\013\n\003ssd\030\002 " +
      "\002(\t\022\020\n\010harddisk\030\003 \002(\t\022\016\n\006memory\030\004 \002(\t\022\n\n" +
      "\002ip\030\005 \002(\t\022\017\n\007gateway\030\006 \002(\t\022\017\n\007softdog\030\007 ",
      "\002(\t\"\305\001\n\014DeviceStatus\022\034\n\003cpu\030\001 \002(\0132\017.main" +
      "tainpb.CPU\022&\n\010harddisk\030\002 \002(\0132\024.maintainp" +
      "b.Harddisk\022\"\n\006memory\030\003 \002(\0132\022.maintainpb." +
      "Memory\022$\n\007network\030\004 \002(\0132\023.maintainpb.Net" +
      "work\022%\n\010sys_para\030\005 \001(\0132\023.maintainpb.SysP" +
      "ara\"\241\001\n\017DevServerStatus\022\014\n\004name\030\001 \002(\t\022*\n" +
      "\007process\030\002 \003(\0132\031.maintainpb.ProcessStatu" +
      "s\022*\n\007service\030\003 \003(\0132\031.maintainpb.ServiceS" +
      "tatus\022(\n\006device\030\004 \002(\0132\030.maintainpb.Devic" +
      "eStatus\"Q\n\021DevServerMaintain\022\017\n\007version\030",
      "\001 \002(\t\022+\n\006status\030\002 \003(\0132\033.maintainpb.DevSe" +
      "rverStatus\"A\n\007Publish\0226\n\017server_maintain" +
      "\030\001 \001(\0132\035.maintainpb.DevServerMaintain\"V\n" +
      "\007Message\022%\n\004type\030\001 \002(\0162\027.maintainpb.Mess" +
      "ageType\022$\n\007publish\030\004 \001(\0132\023.maintainpb.Pu" +
      "blish*\'\n\013MessageType\022\030\n\022MsgDevServerStat" +
      "us\020\201\300\002B#\n\025FacedataProcessServerB\nMaintai" +
      "npb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_maintainpb_ProcessStatus_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_maintainpb_ProcessStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_ProcessStatus_descriptor,
        new java.lang.String[] { "Name", "Version", "StartTime", "Runtime", "Status", });
    internal_static_maintainpb_FdfsStatus_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_maintainpb_FdfsStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_FdfsStatus_descriptor,
        new java.lang.String[] { "Group", "Total", "Free", "TrunkFree", });
    internal_static_maintainpb_MySqlStatus_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_maintainpb_MySqlStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_MySqlStatus_descriptor,
        new java.lang.String[] { "Connection", "Traffic", "Select", "Usage", "Reads", "Writes", });
    internal_static_maintainpb_ServiceStatus_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_maintainpb_ServiceStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_ServiceStatus_descriptor,
        new java.lang.String[] { "Name", "Version", "Time", "StartTime", "Runtime", "Status", "Fdfs", "Mysql", });
    internal_static_maintainpb_CPU_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_maintainpb_CPU_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_CPU_descriptor,
        new java.lang.String[] { "Load", "Time", });
    internal_static_maintainpb_Harddisk_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_maintainpb_Harddisk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_Harddisk_descriptor,
        new java.lang.String[] { "Used", "Free", });
    internal_static_maintainpb_Memory_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_maintainpb_Memory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_Memory_descriptor,
        new java.lang.String[] { "Used", "Available", "Free", });
    internal_static_maintainpb_Network_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_maintainpb_Network_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_Network_descriptor,
        new java.lang.String[] { "Load", "Time", });
    internal_static_maintainpb_SysPara_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_maintainpb_SysPara_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_SysPara_descriptor,
        new java.lang.String[] { "Cpu", "Ssd", "Harddisk", "Memory", "Ip", "Gateway", "Softdog", });
    internal_static_maintainpb_DeviceStatus_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_maintainpb_DeviceStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_DeviceStatus_descriptor,
        new java.lang.String[] { "Cpu", "Harddisk", "Memory", "Network", "SysPara", });
    internal_static_maintainpb_DevServerStatus_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_maintainpb_DevServerStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_DevServerStatus_descriptor,
        new java.lang.String[] { "Name", "Process", "Service", "Device", });
    internal_static_maintainpb_DevServerMaintain_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_maintainpb_DevServerMaintain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_DevServerMaintain_descriptor,
        new java.lang.String[] { "Version", "Status", });
    internal_static_maintainpb_Publish_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_maintainpb_Publish_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_Publish_descriptor,
        new java.lang.String[] { "ServerMaintain", });
    internal_static_maintainpb_Message_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_maintainpb_Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_maintainpb_Message_descriptor,
        new java.lang.String[] { "Type", "Publish", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
